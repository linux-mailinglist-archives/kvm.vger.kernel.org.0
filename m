Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 0397D41D7BC
	for <lists+kvm@lfdr.de>; Thu, 30 Sep 2021 12:30:10 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S1349923AbhI3Kbf (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Thu, 30 Sep 2021 06:31:35 -0400
Received: from mail.kernel.org ([198.145.29.99]:40692 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S1349904AbhI3Kbe (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 30 Sep 2021 06:31:34 -0400
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org [51.254.78.96])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 0DD6F61882;
        Thu, 30 Sep 2021 10:29:52 +0000 (UTC)
Received: from sofa.misterjones.org ([185.219.108.64] helo=why.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94.2)
        (envelope-from <maz@kernel.org>)
        id 1mVtK2-00DxJW-4B; Thu, 30 Sep 2021 11:29:50 +0100
Date:   Thu, 30 Sep 2021 11:29:49 +0100
Message-ID: <87a6jutkyq.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Suzuki K Poulose <suzuki.poulose@arm.com>
Cc:     linux-arm-kernel@lists.infradead.org, kvm@vger.kernel.org,
        kvmarm@lists.cs.columbia.edu, ascull@google.com,
        dbrazdil@google.com, James Morse <james.morse@arm.com>,
        Alexandru Elisei <alexandru.elisei@arm.com>,
        kernel-team@android.com
Subject: Re: [PATCH] KVM: arm64: Allow KVM to be disabled from the command line
In-Reply-To: <5bc623f2-e4c1-cc9c-683c-2f95648f1a68@arm.com>
References: <20210903091652.985836-1-maz@kernel.org>
        <5bc623f2-e4c1-cc9c-683c-2f95648f1a68@arm.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: suzuki.poulose@arm.com, linux-arm-kernel@lists.infradead.org, kvm@vger.kernel.org, kvmarm@lists.cs.columbia.edu, ascull@google.com, dbrazdil@google.com, james.morse@arm.com, alexandru.elisei@arm.com, kernel-team@android.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

On Wed, 29 Sep 2021 11:35:46 +0100,
Suzuki K Poulose <suzuki.poulose@arm.com> wrote:
> 
> On 03/09/2021 10:16, Marc Zyngier wrote:
> > Although KVM can be compiled out of the kernel, it cannot be disabled
> > at runtime. Allow this possibility by introducing a new mode that
> > will prevent KVM from initialising.
> > 
> > This is useful in the (limited) circumstances where you don't want
> > KVM to be available (what is wrong with you?), or when you want
> > to install another hypervisor instead (good luck with that).
> > 
> > Signed-off-by: Marc Zyngier <maz@kernel.org>
> > ---
> >   Documentation/admin-guide/kernel-parameters.txt |  3 +++
> >   arch/arm64/include/asm/kvm_host.h               |  1 +
> >   arch/arm64/kernel/idreg-override.c              |  1 +
> >   arch/arm64/kvm/arm.c                            | 14 +++++++++++++-
> >   4 files changed, 18 insertions(+), 1 deletion(-)
> > 
> > diff --git a/Documentation/admin-guide/kernel-parameters.txt b/Documentation/admin-guide/kernel-parameters.txt
> > index 91ba391f9b32..cc5f68846434 100644
> > --- a/Documentation/admin-guide/kernel-parameters.txt
> > +++ b/Documentation/admin-guide/kernel-parameters.txt
> > @@ -2365,6 +2365,9 @@
> >   	kvm-arm.mode=
> >   			[KVM,ARM] Select one of KVM/arm64's modes of operation.
> >   +			none: Forcefully disable KVM and run in nVHE
> > mode,
> > +			      preventing KVM from ever initialising.
> > +
> >   			nvhe: Standard nVHE-based mode, without support for
> >   			      protected guests.
> >   diff --git a/arch/arm64/include/asm/kvm_host.h
> > b/arch/arm64/include/asm/kvm_host.h
> > index f8be56d5342b..019490c67976 100644
> > --- a/arch/arm64/include/asm/kvm_host.h
> > +++ b/arch/arm64/include/asm/kvm_host.h
> > @@ -58,6 +58,7 @@
> >   enum kvm_mode {
> >   	KVM_MODE_DEFAULT,
> >   	KVM_MODE_PROTECTED,
> > +	KVM_MODE_NONE,
> >   };
> >   enum kvm_mode kvm_get_mode(void);
> >   diff --git a/arch/arm64/kernel/idreg-override.c
> > b/arch/arm64/kernel/idreg-override.c
> > index d8e606fe3c21..57013c1b6552 100644
> > --- a/arch/arm64/kernel/idreg-override.c
> > +++ b/arch/arm64/kernel/idreg-override.c
> > @@ -95,6 +95,7 @@ static const struct {
> >   	char	alias[FTR_ALIAS_NAME_LEN];
> >   	char	feature[FTR_ALIAS_OPTION_LEN];
> >   } aliases[] __initconst = {
> > +	{ "kvm-arm.mode=none",		"id_aa64mmfr1.vh=0" },
> >   	{ "kvm-arm.mode=nvhe",		"id_aa64mmfr1.vh=0" },
> >   	{ "kvm-arm.mode=protected",	"id_aa64mmfr1.vh=0" },
> >   	{ "arm64.nobti",		"id_aa64pfr1.bt=0" },
> > diff --git a/arch/arm64/kvm/arm.c b/arch/arm64/kvm/arm.c
> > index fe102cd2e518..cdc70e238316 100644
> > --- a/arch/arm64/kvm/arm.c
> > +++ b/arch/arm64/kvm/arm.c
> > @@ -2064,6 +2064,11 @@ int kvm_arch_init(void *opaque)
> >   		return -ENODEV;
> >   	}
> >   +	if (kvm_get_mode() == KVM_MODE_NONE) {
> > +		kvm_info("KVM disabled from command line\n");
> > +		return -ENODEV;
> > +	}
> > +
> >   	in_hyp_mode = is_kernel_in_hyp_mode();
> >     	if (cpus_have_final_cap(ARM64_WORKAROUND_DEVICE_LOAD_ACQUIRE)
> > ||
> > @@ -2137,8 +2142,15 @@ static int __init early_kvm_mode_cfg(char *arg)
> >   		return 0;
> >   	}
> >   -	if (strcmp(arg, "nvhe") == 0 &&
> > !WARN_ON(is_kernel_in_hyp_mode()))
> > +	if (strcmp(arg, "nvhe") == 0 && !WARN_ON(is_kernel_in_hyp_mode())) {
> > +		kvm_mode = KVM_MODE_DEFAULT;
> >   		return 0;
> > +	}
> > +
> > +	if (strcmp(arg, "none") == 0 && !WARN_ON(is_kernel_in_hyp_mode())) {
> 
> nit: Does this really need to WARN here ? Unlike the "nvhe" case, if the
> user wants to keep the KVM out of the picture for, say debugging
> something, it is perfectly Ok to allow the kernel to be running at EL2
> without having to change the Firmware to alter the landing EL for the
> kernel ?

Well, the doc says "run in nVHE mode" and the option forces
id_aa64mmfr1.vh=0. The WARN_ON() will only fires on broken^Wfruity HW
that is VHE only. Note that this doesn't rely on any firmware change
(we drop from EL2 to EL1 and stay there).

We could add another option (none-vhe?) that stays at EL2 and still
disables KVM if there is an appetite for it.

> Otherwise,
> 
> Acked-by: Suzuki K Poulose <suzuki.poulose@arm.com>
> 

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
