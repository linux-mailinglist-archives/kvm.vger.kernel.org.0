Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 357D8474915
	for <lists+kvm@lfdr.de>; Tue, 14 Dec 2021 18:16:45 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S236380AbhLNRQh (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Tue, 14 Dec 2021 12:16:37 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:44274 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S236208AbhLNRQg (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 14 Dec 2021 12:16:36 -0500
Received: from mail-pj1-x1029.google.com (mail-pj1-x1029.google.com [IPv6:2607:f8b0:4864:20::1029])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 13C90C06173E
        for <kvm@vger.kernel.org>; Tue, 14 Dec 2021 09:16:36 -0800 (PST)
Received: by mail-pj1-x1029.google.com with SMTP id n15-20020a17090a160f00b001a75089daa3so17762013pja.1
        for <kvm@vger.kernel.org>; Tue, 14 Dec 2021 09:16:36 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=google.com; s=20210112;
        h=date:from:to:cc:subject:message-id:references:mime-version
         :content-disposition:in-reply-to;
        bh=DLIiHWejTvBczvMB4LaGo/x+JKahlOS065QQRy4QKls=;
        b=TgAWkk1RgihXiWq6f70ui5/U8oLI+Up2x5oVLr+g8O5t6clJf9vmq6VHne4c/SDTWk
         +Sk9Hn+gCzrsfeEPbUxUzKPfJTUZafnlALOlWBwwU7Wk4UuIa95qcWxDcYtEk6KlXPpq
         1SEjBr0O0NSmet7rpfuUErsOmttjuIe8TQdDA+NHuvP+W+09fUlDUbPxW7f7SBS3MBSF
         307N7Tw1Lvd9mB/OrAEo7d00EsteCEPUld/mZ/j8hO6Wf+GBqrvVp7ctprivqjnL1ftZ
         CRWuaPnj5vBI6fY9qu4eBVWS2wp4qGOefJfIoT3uwWl2pBPyhswP7YBooqr8jXCta9xK
         gdrg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=x-gm-message-state:date:from:to:cc:subject:message-id:references
         :mime-version:content-disposition:in-reply-to;
        bh=DLIiHWejTvBczvMB4LaGo/x+JKahlOS065QQRy4QKls=;
        b=t+GB3/eXG8H1CC2WkGTNH4jGQGWiSi9GpWpiaOzGtKezeaLUzZ+5HkPx0kESH+lYb6
         oTExTlPcqHodGYD/a7uNNJ+AnRKMDIDZxNyeiDmxwdovTK3k70Qw8BUhn7VgW8WRKtoF
         LkaD1SU3qyRHNrz8t9080mEsTgQ97OtDxLDcbNcNjOeouecGpO4haY0G3f2BwlCEJhcO
         yepM3GTqvh2vq1JhpysnXaX8ZjrCgi7BMxfQ+9HYfDuqRcl0TQ8XVvgbBJWTnlgOyYrt
         GtMlFfen4FRMbtPMJQuOcmY0sVEs6d918t9HY+5AsHs7Ik0xAWNKllWi3w4eOyfTa1JU
         5aTA==
X-Gm-Message-State: AOAM533cX0BStGeIZVgccFZ/BuNvaFtW1mcHAbXZ7igTVdzk/mHQmPn1
        sQMiCn8W1b8JpShyGsTdpv1bSw==
X-Google-Smtp-Source: ABdhPJzQmyeG2ksZ5pIDoEX8o40MojieVj9iFPK8wm5P1cfsFVeI/npALxTfLbDyJ1dtqzBqe0IGeg==
X-Received: by 2002:a17:90b:17cc:: with SMTP id me12mr7049760pjb.179.1639502195385;
        Tue, 14 Dec 2021 09:16:35 -0800 (PST)
Received: from google.com (157.214.185.35.bc.googleusercontent.com. [35.185.214.157])
        by smtp.gmail.com with ESMTPSA id lb4sm3267104pjb.18.2021.12.14.09.16.34
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Tue, 14 Dec 2021 09:16:34 -0800 (PST)
Date:   Tue, 14 Dec 2021 17:16:31 +0000
From:   Sean Christopherson <seanjc@google.com>
To:     Vipin Sharma <vipinsh@google.com>
Cc:     pbonzini@redhat.com, dmatlack@google.com, kvm@vger.kernel.org,
        linux-kernel@vger.kernel.org
Subject: Re: [PATCH] KVM: Move VM's worker kthreads back to the original
 cgroups before exiting.
Message-ID: <YbjRb0XR7neyX/Gy@google.com>
References: <20211214050708.4040200-1-vipinsh@google.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20211214050708.4040200-1-vipinsh@google.com>
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

On Tue, Dec 14, 2021, Vipin Sharma wrote:
> VM worker kthreads can linger in the VM process's cgroup for sometime
> after KVM temrinates the VM process.
> 
> KVM terminates the worker kthreads by calling kthread_stop() which waits
> on the signal generated by exit_mm() in do_exit() during kthread's exit.
> However, these kthreads are removed from the cgroup using cgroup_exit()
> call which happens after exit_mm() in do_exit(). A VM process can
> terminate between the time window of exit_mm() to cgroup_exit(), leaving
> only worker kthreads in the cgroup.
> 
> Moving worker kthreads back to the original cgroup (kthreadd_task's
> cgroup) makes sure that cgroup is empty as soon as the main VM process
> is terminated.
> 
> Signed-off-by: Vipin Sharma <vipinsh@google.com>
> ---
>  virt/kvm/kvm_main.c | 11 ++++++++++-
>  1 file changed, 10 insertions(+), 1 deletion(-)
> 
> diff --git a/virt/kvm/kvm_main.c b/virt/kvm/kvm_main.c
> index b0f7e6eb00ff..edd304a18f16 100644
> --- a/virt/kvm/kvm_main.c
> +++ b/virt/kvm/kvm_main.c
> @@ -5785,7 +5785,7 @@ static int kvm_vm_worker_thread(void *context)
>  	init_context = NULL;
>  
>  	if (err)
> -		return err;
> +		goto out;
>  
>  	/* Wait to be woken up by the spawner before proceeding. */
>  	kthread_parkme();
> @@ -5793,6 +5793,15 @@ static int kvm_vm_worker_thread(void *context)
>  	if (!kthread_should_stop())
>  		err = thread_fn(kvm, data);
>  
> +out:
> +	/*
> +	 * We need to move the kthread back to its original cgroups, so that it
> +	 * doesn't linger in the cgroups of the user process after that has
> +	 * already terminated. exit_mm() in do_exit() signals kthread_stop() to
> +	 * return, whereas, removal of the task from the cgroups happens in
> +	 * cgroup_exit() which happens after exit_mm().
> +	 */
> +	WARN_ON(cgroup_attach_task_all(kthreadd_task, current));

As the build bot noted, kthreadd_task isn't exported, and I doubt you'll convince
folks to let you export it.

Why is it problematic for the kthread to linger in the cgroup?  Conceptually, it's
not really wrong.

>  	return err;
>  }
>  
> 
> base-commit: d8f6ef45a623d650f9b97e11553adb4978f6aa70
> -- 
> 2.34.1.173.g76aa8bc2d0-goog
> 
