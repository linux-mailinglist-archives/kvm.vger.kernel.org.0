Return-Path: <kvm+bounces-18304-lists+kvm=lfdr.de@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from am.mirrors.kernel.org (am.mirrors.kernel.org [IPv6:2604:1380:4601:e00::3])
	by mail.lfdr.de (Postfix) with ESMTPS id 88E5F8D399B
	for <lists+kvm@lfdr.de>; Wed, 29 May 2024 16:45:31 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by am.mirrors.kernel.org (Postfix) with ESMTPS id 013C91F24397
	for <lists+kvm@lfdr.de>; Wed, 29 May 2024 14:45:31 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id EF11C15ADAB;
	Wed, 29 May 2024 14:44:53 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="Yl15wPgr"
X-Original-To: kvm@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 20D9915AD99;
	Wed, 29 May 2024 14:44:52 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1716993893; cv=none; b=l45x+KmXkoTBZTjWwmX6RWXim7muuqs9MWgYXk3GlXPEjkhpReWnTxA2phqGK+wsHhSaGTY6uhmXMqhnDmCwRWZWdMdh0T0FVHOvoMPn+TLItL/uuaCfEokD8Js4ghj2fXlPqRKkzjxTXH6MsHhof+3kVrzBrlwOxKnVLW47jhI=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1716993893; c=relaxed/simple;
	bh=IBwxOd5lJ8HVS/TkS0TxTcWs6CiVq5/atr1iw1kaySg=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=VCXrep6PIHOJXMa0zq1hDf58JwjToKZ16ZywrL69R8OxQbHDEdiV/AgINOpkIrFlgcQ3T1bD0AncIJo/F+KhnNYcWsPBQTHpmV7wAnxpXaFJse+dFobZErXrlzSSMV8X0jRJMVqCWru5tmO5cTJQLgQW87n/xUNs8uHl9aluoRE=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=Yl15wPgr; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id ADD3CC2BD10;
	Wed, 29 May 2024 14:44:52 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1716993892;
	bh=IBwxOd5lJ8HVS/TkS0TxTcWs6CiVq5/atr1iw1kaySg=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=Yl15wPgrYOYI0RJDmFreWdaiCyh5ygtmidkptNwsvue1rQItu5Oln6HXp141ESjol
	 rG/UTZxgv81b3YIfmubUVZAaWRDmimq7eX6fd5cj5M+F1b0qzxbzy/1vE8PcGs9iIU
	 N5wjxwAzZjU1XCoDuDSvIYqOpH8MPD9AXgF0ABRnCJJswVu3BnLZhSNqQAVA0a7IGu
	 yrFPSh3FSFrGz3YYD8hSZNH7yhg8NThW1dwR9Db9eBzNeSQSKZUZg0zGlSTIn4Xrl3
	 mdTJsMyeVFVWn+PuV0WuRErte3sTjtoza16cG2seSKKJLt6SqNJCEoIUOhD9ScBGSS
	 yB4jR/os1pRXA==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1sCKXq-00GeTX-JN;
	Wed, 29 May 2024 15:44:50 +0100
Date: Wed, 29 May 2024 15:44:50 +0100
Message-ID: <865xuwn0d9.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Joey Gouly <joey.gouly@arm.com>
Cc: kvmarm@lists.linux.dev,
	linux-arm-kernel@lists.infradead.org,
	kvm@vger.kernel.org,
	James Morse <james.morse@arm.com>,
	Suzuki K Poulose <suzuki.poulose@arm.com>,
	Oliver Upton <oliver.upton@linux.dev>,
	Zenghui Yu <yuzenghui@huawei.com>
Subject: Re: [PATCH 1/2] KVM: arm64: nv: Fix relative priorities of exceptions generated by ERETAx
In-Reply-To: <20240529142727.GA1357631@e124191.cambridge.arm.com>
References: <20240528100632.1831995-1-maz@kernel.org>
	<20240528100632.1831995-2-maz@kernel.org>
	<20240529142727.GA1357631@e124191.cambridge.arm.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.2
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: kvm@vger.kernel.org
List-Id: <kvm.vger.kernel.org>
List-Subscribe: <mailto:kvm+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:kvm+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: joey.gouly@arm.com, kvmarm@lists.linux.dev, linux-arm-kernel@lists.infradead.org, kvm@vger.kernel.org, james.morse@arm.com, suzuki.poulose@arm.com, oliver.upton@linux.dev, yuzenghui@huawei.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

Hi Joey,

On Wed, 29 May 2024 15:27:27 +0100,
Joey Gouly <joey.gouly@arm.com> wrote:
> 
> Hi Marc,
> 
> These references are from ARM DDI 0487 J.a.

Ah, you have an upgrade pending! ;-)

> 
> On Tue, May 28, 2024 at 11:06:31AM +0100, Marc Zyngier wrote:
> > ERETAx can fail in multiple ways:
> > 
> > (1) ELR_EL2 points lalaland
> > (2) we get a PAC failure
> > (3) SPSR_EL2 has the wrong mode
> > 
> > (1) is easy, as we just let the CPU do its thing and deliver an
> > Instruction Abort. However, (2) and (3) are interesting, because
> > the PAC failure priority is way below that of the Illegal Execution
> > State exception.
> > 
> > Which means that if we have detected a PAC failure (and that we have
> > FPACCOMBINE), we must be careful to give priority to the Illegal
> > Execution State exception, should one be pending.
> 
> This is IZFGJP Prioritization of Synchronous exceptions taken to
> AArch64 state.
>

Indeed.

> > 
> > Solving this involves hoisting the SPSR calculation earlier and
> > testing for the IL bit before injecting the FPAC exception.
> > 
> > In the extreme case of a ERETAx returning to an invalid mode *and*
> > failing its PAC check, we end up with an Instruction Abort (due
> > to the new PC being mangled by the failed Auth) *and* PSTATE.IL
> > being set. Which matches the requirements of the architecture.
> 
> And this is IGPPXQ, which says "which causes the next instruction to
> generate an Illegal State exception. The exception return
> instruction does not generate the exception."
> 
> Which matches since Instruction Abort has a higher priority than
> Illegal Exception.

Spot on. Although it is a bit surprising that in all cases, the CPU
has to attempt fetching the next instruction before delivering the IL
exception so that it can prioritise the Abort. I guess it simplifies
some HW implementations, but makes SW suffer a bit.

> 
> > 
> > Whilst we're at it, remove a stale comment that states the obvious
> > and only confuses the reader.
> > 
> > Fixes: 213b3d1ea161 ("KVM: arm64: nv: Handle ERETA[AB] instructions")
> > Signed-off-by: Marc Zyngier <maz@kernel.org>
> > ---
> >  arch/arm64/kvm/emulate-nested.c | 21 +++++++++++----------
> >  1 file changed, 11 insertions(+), 10 deletions(-)
> > 
> > diff --git a/arch/arm64/kvm/emulate-nested.c b/arch/arm64/kvm/emulate-nested.c
> > index 72d733c74a38..54090967a335 100644
> > --- a/arch/arm64/kvm/emulate-nested.c
> > +++ b/arch/arm64/kvm/emulate-nested.c
> > @@ -2181,16 +2181,23 @@ void kvm_emulate_nested_eret(struct kvm_vcpu *vcpu)
> >  	if (forward_traps(vcpu, HCR_NV))
> >  		return;
> >  
> > +	spsr = vcpu_read_sys_reg(vcpu, SPSR_EL2);
> > +	spsr = kvm_check_illegal_exception_return(vcpu, spsr);
> > +
> >  	/* Check for an ERETAx */
> >  	esr = kvm_vcpu_get_esr(vcpu);
> >  	if (esr_iss_is_eretax(esr) && !kvm_auth_eretax(vcpu, &elr)) {
> >  		/*
> > -		 * Oh no, ERETAx failed to authenticate.  If we have
> > -		 * FPACCOMBINE, deliver an exception right away.  If we
> > -		 * don't, then let the mangled ELR value trickle down the
> > +		 * Oh no, ERETAx failed to authenticate.
> > +		 *
> > +		 * If we have FPACCOMBINE and we don't have a pending
> > +		 * Illegal Execution State exception (which has priority
> > +		 * over FPAC), deliver an exception right away.
> > +		 *
> > +		 * Otherwise, let the mangled ELR value trickle down the
> >  		 * ERET handling, and the guest will have a little surprise.
> >  		 */
> > -		if (kvm_has_pauth(vcpu->kvm, FPACCOMBINE)) {
> > +		if (kvm_has_pauth(vcpu->kvm, FPACCOMBINE) && !(spsr & PSR_IL_BIT)) {
> >  			esr &= ESR_ELx_ERET_ISS_ERETA;
> >  			esr |= FIELD_PREP(ESR_ELx_EC_MASK, ESR_ELx_EC_FPAC);
> >  			kvm_inject_nested_sync(vcpu, esr);
> > @@ -2201,17 +2208,11 @@ void kvm_emulate_nested_eret(struct kvm_vcpu *vcpu)
> >  	preempt_disable();
> >  	kvm_arch_vcpu_put(vcpu);
> >  
> > -	spsr = __vcpu_sys_reg(vcpu, SPSR_EL2);
> > -	spsr = kvm_check_illegal_exception_return(vcpu, spsr);
> >  	if (!esr_iss_is_eretax(esr))
> >  		elr = __vcpu_sys_reg(vcpu, ELR_EL2);
> >  
> >  	trace_kvm_nested_eret(vcpu, elr, spsr);
> >  
> > -	/*
> > -	 * Note that the current exception level is always the virtual EL2,
> > -	 * since we set HCR_EL2.NV bit only when entering the virtual EL2.
> > -	 */
> >  	*vcpu_pc(vcpu) = elr;
> >  	*vcpu_cpsr(vcpu) = spsr;
> >  
> 
> Those references were just me checking it, not suggesting you edit
> the commit message.

Well, that's excellent detective work!

>
> Reviewed-by: Joey Gouly <joey.gouly@arm.com>

Thanks again,

	M.

-- 
Without deviation from the norm, progress is not possible.

