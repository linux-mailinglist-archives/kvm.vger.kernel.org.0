Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id E07A248AB49
	for <lists+kvm@lfdr.de>; Tue, 11 Jan 2022 11:23:53 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S237686AbiAKKXx (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Tue, 11 Jan 2022 05:23:53 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:56476 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S233911AbiAKKXw (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 11 Jan 2022 05:23:52 -0500
Received: from ams.source.kernel.org (ams.source.kernel.org [IPv6:2604:1380:4601:e00::1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id C6E4EC06173F
        for <kvm@vger.kernel.org>; Tue, 11 Jan 2022 02:23:51 -0800 (PST)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by ams.source.kernel.org (Postfix) with ESMTPS id 587DBB819D0
        for <kvm@vger.kernel.org>; Tue, 11 Jan 2022 10:23:50 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 0D6E5C36AE9;
        Tue, 11 Jan 2022 10:23:49 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1641896629;
        bh=rLjD10oD9rqTVqIwpiJZNWSMQasAD9/0XTaE7F0fPJM=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=TCU5mDKO7IVKoA6t1LM1XXUwtnRWErJZiM8V0rm9W6W0dOtlo41/6ao7AGeXG6DWo
         a3CxPbUcMDKNUwEY98ghskIzMQPGU7aODjowexlxLse7uqek8kjj9w1eVbJMObl7ji
         LoFBKsAtgbNkMqkZa3s6WlU4x0cuTdHeuSFSipv1kCrt9Un4m5uAyE75Rao/HMaypl
         1gkfZz2BzJRRtkUwMKw4ZCHSn0dnLIDFvx5UObh7bUWcBzYA3e1wMP4/kKZeY6wuVz
         hCIenB7SZQHvNn7XAZ6T9+r+cPcFA+bnHnurRrlsYdfgYWHb7NOWIlY6Ubun7FPivZ
         SZHKTUH9gOKFw==
Received: from sofa.misterjones.org ([185.219.108.64] helo=why.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94.2)
        (envelope-from <maz@kernel.org>)
        id 1n7EJf-00HM32-2U; Tue, 11 Jan 2022 10:23:47 +0000
Date:   Tue, 11 Jan 2022 10:23:46 +0000
Message-ID: <87bl0itvt9.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Jing Zhang <jingzhangos@google.com>
Cc:     KVM <kvm@vger.kernel.org>, KVMARM <kvmarm@lists.cs.columbia.edu>,
        Will Deacon <will@kernel.org>,
        Paolo Bonzini <pbonzini@redhat.com>,
        David Matlack <dmatlack@google.com>,
        Oliver Upton <oupton@google.com>,
        Reiji Watanabe <reijiw@google.com>
Subject: Re: [RFC PATCH 1/3] KVM: arm64: Use read/write spin lock for MMU protection
In-Reply-To: <20220110210441.2074798-2-jingzhangos@google.com>
References: <20220110210441.2074798-1-jingzhangos@google.com>
        <20220110210441.2074798-2-jingzhangos@google.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: jingzhangos@google.com, kvm@vger.kernel.org, kvmarm@lists.cs.columbia.edu, will@kernel.org, pbonzini@redhat.com, dmatlack@google.com, oupton@google.com, reijiw@google.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

On Mon, 10 Jan 2022 21:04:39 +0000,
Jing Zhang <jingzhangos@google.com> wrote:
> 
> To reduce the contentions caused by MMU lock, some MMU operations can
> be performed under read lock.
> One improvement is to add a fast path for permission relaxation during
> dirty logging under the read lock.

This commit message really doesn't say what this patch does
(converting our MMU spinlock to a rwlock, and replacing all instances
of the lock being acquired with a write lock acquisition). Crucially,
it only mention the read lock which appears *nowhere* in this patch.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
