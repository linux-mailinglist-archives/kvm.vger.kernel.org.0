Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id DC5CB3D2BAE
	for <lists+kvm@lfdr.de>; Thu, 22 Jul 2021 20:05:05 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S230072AbhGVRY1 (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Thu, 22 Jul 2021 13:24:27 -0400
Received: from mail.kernel.org ([198.145.29.99]:33946 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S229826AbhGVRY1 (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 22 Jul 2021 13:24:27 -0400
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org [51.254.78.96])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id F2B0D61380;
        Thu, 22 Jul 2021 18:05:01 +0000 (UTC)
Received: from sofa.misterjones.org ([185.219.108.64] helo=wait-a-minute.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94.2)
        (envelope-from <maz@kernel.org>)
        id 1m6d48-000Kxq-3W; Thu, 22 Jul 2021 19:05:00 +0100
Date:   Thu, 22 Jul 2021 19:04:59 +0100
Message-ID: <87wnpi1ayc.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Quentin Perret <qperret@google.com>
Cc:     linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu,
        kvm@vger.kernel.org, linux-kernel@vger.kernel.org, will@kernel.org,
        dbrazdil@google.com, Srivatsa Vaddagiri <vatsa@codeaurora.org>,
        Shanker R Donthineni <sdonthineni@nvidia.com>,
        James Morse <james.morse@arm.com>,
        Suzuki K Poulose <suzuki.poulose@arm.com>,
        Alexandru Elisei <alexandru.elisei@arm.com>,
        kernel-team@android.com
Subject: Re: [PATCH 04/16] KVM: arm64: Add MMIO checking infrastructure
In-Reply-To: <YPbwmVk1YD9+y7tr@google.com>
References: <20210715163159.1480168-1-maz@kernel.org>
        <20210715163159.1480168-5-maz@kernel.org>
        <YPav0Hye5Dat/yoL@google.com>
        <87wnpl86sz.wl-maz@kernel.org>
        <YPbwmVk1YD9+y7tr@google.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: qperret@google.com, linux-arm-kernel@lists.infradead.org, kvmarm@lists.cs.columbia.edu, kvm@vger.kernel.org, linux-kernel@vger.kernel.org, will@kernel.org, dbrazdil@google.com, vatsa@codeaurora.org, sdonthineni@nvidia.com, james.morse@arm.com, suzuki.poulose@arm.com, alexandru.elisei@arm.com, kernel-team@android.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

On Tue, 20 Jul 2021 16:49:45 +0100,
Quentin Perret <qperret@google.com> wrote:
> 
> On Tuesday 20 Jul 2021 at 14:15:56 (+0100), Marc Zyngier wrote:
> > On Tue, 20 Jul 2021 12:13:20 +0100,
> > Quentin Perret <qperret@google.com> wrote:
> > > 
> > > On Thursday 15 Jul 2021 at 17:31:47 (+0100), Marc Zyngier wrote:
> > > > +struct s2_walk_data {
> > > > +	kvm_pte_t	pteval;
> > > > +	u32		level;
> > > > +};
> > > > +
> > > > +static int s2_walker(u64 addr, u64 end, u32 level, kvm_pte_t *ptep,
> > > > +		     enum kvm_pgtable_walk_flags flag, void * const arg)
> > > > +{
> > > > +	struct s2_walk_data *data = arg;
> > > > +
> > > > +	data->level = level;
> > > > +	data->pteval = *ptep;
> > > > +	return 0;
> > > > +}
> > > > +
> > > > +/* Assumes mmu_lock taken */
> > > > +static bool __check_ioguard_page(struct kvm_vcpu *vcpu, gpa_t ipa)
> > > > +{
> > > > +	struct s2_walk_data data;
> > > > +	struct kvm_pgtable_walker walker = {
> > > > +		.cb             = s2_walker,
> > > > +		.flags          = KVM_PGTABLE_WALK_LEAF,
> > > > +		.arg            = &data,
> > > > +	};
> > > > +
> > > > +	kvm_pgtable_walk(vcpu->arch.hw_mmu->pgt, ALIGN_DOWN(ipa, PAGE_SIZE),
> > > > +			 PAGE_SIZE, &walker);
> > > > +
> > > > +	/* Must be a PAGE_SIZE mapping with our annotation */
> > > > +	return (BIT(ARM64_HW_PGTABLE_LEVEL_SHIFT(data.level)) == PAGE_SIZE &&
> > > > +		data.pteval == MMIO_NOTE);
> > > 
> > > Nit: you could do this check in the walker directly and check the return
> > > value of kvm_pgtable_walk() instead. That would allow to get rid of
> > > struct s2_walk_data.
> > > 
> > > Also, though the compiler might be able to optimize, maybe simplify the
> > > level check to level == (KVM_PGTABLE_MAX_LEVELS - 1)?
> > 
> > Yup, all good points. I guess I could do the same in my other series
> > that parses the userspace PT to extract the level.
> 
> Well, actually, let me take that back. I think something like you have
> would be useful, but in pgtable.c directly and re-usable for stage-1 and
> stage-2 walks. Maybe something like the below (totally untested)?
> 
> I could use such a walker in several places as well in the memory
> ownership series:
> 
>  - following the idea of [1], I could remove the
>    kvm_pgtable_stage2_find_range() function entirely;
> 
>  - [2] defines 2 custom walkers that do nothing but walk host stage-2
>    and hyp stage-1 page-tables to check permissions and such --  they
>    could be removed/re-implemented easily as well.
> 
> And you seem to need something similar here, so clearly there is a need.
> WDYT?

So FWIW, I've now pushed out an updated series for the THP changes[1],
and you will find a similar patch at the base of the branch. Please
have a look and let me know what you think!

Thanks,

	M.

[1] https://git.kernel.org/pub/scm/linux/kernel/git/maz/arm-platforms.git/log/?h=kvm-arm64/mmu/mapping-levels

-- 
Without deviation from the norm, progress is not possible.
