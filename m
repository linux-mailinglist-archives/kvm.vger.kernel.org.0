Return-Path: <kvm+bounces-28990-lists+kvm=lfdr.de@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from sy.mirrors.kernel.org (sy.mirrors.kernel.org [IPv6:2604:1380:40f1:3f00::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 586849A0854
	for <lists+kvm@lfdr.de>; Wed, 16 Oct 2024 13:29:16 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sy.mirrors.kernel.org (Postfix) with ESMTPS id B6799B233D2
	for <lists+kvm@lfdr.de>; Wed, 16 Oct 2024 11:29:13 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 57A542076BB;
	Wed, 16 Oct 2024 11:29:07 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="guNMBDLy"
X-Original-To: kvm@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7F3A41D4350;
	Wed, 16 Oct 2024 11:29:06 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729078146; cv=none; b=Cterb+razcm2j9q123+PiF/htvTgQ+S7jRVQ9+bEnnrPqU7Mk7SbRx6k2X/c500X2FGK6FTKVrR7hXOYJb/bwyAeRCuvyAm/EBRx3xmGk6hAl8dkR5hE7QJZHPFq1yNgkenkb8zMzB8/xvFsUAKZ2RvZJuWjb5z0IloeSaMpXXo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729078146; c=relaxed/simple;
	bh=cUvNjQmF2c4w0mywk53tMInsr/p3XexjMTpVlyuRhw0=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=P0V24O2LNPt37miGijUT7TT3hDR9PLWf+Y3ElsccH0bwI2eR/Ee2z3M+eSgUAakMHKuPJEQ2lrn3xkC7vTuI2llWmshur4yNlJwzbVlzJQpQv5KLYVYHC1wtN5WAsaXWpOFDLe0t6CII8cGMI+8+1Ue9ILfEfLm5PUVt6iIEapA=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=guNMBDLy; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id BD5B8C4CEC5;
	Wed, 16 Oct 2024 11:29:05 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1729078145;
	bh=cUvNjQmF2c4w0mywk53tMInsr/p3XexjMTpVlyuRhw0=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=guNMBDLygehWP+DAab9SyXPikO3EXEcdrtPu1k12TN0haVkd4XgBbH3cVc3ceDnbr
	 MFhbSabp2BSxih6tOO85aR/HaGVQSH0gmQNYrB35OJ98MR4eLtHzkXCKW3q8BeEYlj
	 +Srb8fHnE/nU6KCF+r1WoopAVnsvJqqpvl464T2JwN9TmKc2daHlJT0fhxmSiYaOtJ
	 1A9eOfvFSCLGaHloah9qMiQ7mkS8hV9yXl8IsaBh+tKqw2WqE5/N16ZqsktCdb0FJb
	 kyKyC8uNeJwjrf7WqOmDJ8E73tVLAC9ihg82/IBQVRY+cNeOaj5DcCCT6pQQzmpb7a
	 ZM8Mdj6O45aQw==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1t12D9-0044Cs-37;
	Wed, 16 Oct 2024 12:29:03 +0100
Date: Wed, 16 Oct 2024 12:29:02 +0100
Message-ID: <861q0g5ls1.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Alexandru Elisei <alexandru.elisei@arm.com>
Cc: kvmarm@lists.linux.dev,
	linux-arm-kernel@lists.infradead.org,
	kvm@vger.kernel.org,
	Joey Gouly <joey.gouly@arm.com>,
	Suzuki K Poulose <suzuki.poulose@arm.com>,
	Oliver Upton <oliver.upton@linux.dev>,
	Zenghui Yu <yuzenghui@huawei.com>,
	Mark Brown <broonie@kernel.org>
Subject: Re: [PATCH v4 06/36] KVM: arm64: nv: Handle CNTHCTL_EL2 specially
In-Reply-To: <Zw-JTojEW5ZXa8R-@raptor>
References: <20241009190019.3222687-1-maz@kernel.org>
	<20241009190019.3222687-7-maz@kernel.org>
	<Zw-JTojEW5ZXa8R-@raptor>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: kvm@vger.kernel.org
List-Id: <kvm.vger.kernel.org>
List-Subscribe: <mailto:kvm+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:kvm+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: alexandru.elisei@arm.com, kvmarm@lists.linux.dev, linux-arm-kernel@lists.infradead.org, kvm@vger.kernel.org, joey.gouly@arm.com, suzuki.poulose@arm.com, oliver.upton@linux.dev, yuzenghui@huawei.com, broonie@kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Wed, 16 Oct 2024 10:37:18 +0100,
Alexandru Elisei <alexandru.elisei@arm.com> wrote:
> 
> Hi Marc,
> 
> I'm planning to have a look at (some) of the patches, do you have a
> timeline for merging the series? Just so I know what to prioritise.

I want it merged yesterday. All of it.

> 
> On Wed, Oct 09, 2024 at 07:59:49PM +0100, Marc Zyngier wrote:
> > Accessing CNTHCTL_EL2 is fraught with danger if running with
> > HCR_EL2.E2H=1: half of the bits are held in CNTKCTL_EL1, and
> > thus can be changed behind our back, while the rest lives
> > in the CNTHCTL_EL2 shadow copy that is memory-based.
> > 
> > Yes, this is a lot of fun!
> > 
> > Make sure that we merge the two on read access, while we can
> > write to CNTKCTL_EL1 in a more straightforward manner.
> > 
> > Signed-off-by: Marc Zyngier <maz@kernel.org>
> > ---
> >  arch/arm64/kvm/sys_regs.c    | 28 ++++++++++++++++++++++++++++
> >  include/kvm/arm_arch_timer.h |  3 +++
> >  2 files changed, 31 insertions(+)
> > 
> > diff --git a/arch/arm64/kvm/sys_regs.c b/arch/arm64/kvm/sys_regs.c
> > index 3cd54656a8e2f..932d2fb7a52a0 100644
> > --- a/arch/arm64/kvm/sys_regs.c
> > +++ b/arch/arm64/kvm/sys_regs.c
> > @@ -157,6 +157,21 @@ u64 vcpu_read_sys_reg(const struct kvm_vcpu *vcpu, int reg)
> >  		if (!is_hyp_ctxt(vcpu))
> >  			goto memory_read;
> >  
> > +		/*
> > +		 * CNTHCTL_EL2 requires some special treatment to
> > +		 * account for the bits that can be set via CNTKCTL_EL1.
> > +		 */
> > +		switch (reg) {
> > +		case CNTHCTL_EL2:
> > +			if (vcpu_el2_e2h_is_set(vcpu)) {
> > +				val = read_sysreg_el1(SYS_CNTKCTL);
> > +				val &= CNTKCTL_VALID_BITS;
> > +				val |= __vcpu_sys_reg(vcpu, reg) & ~CNTKCTL_VALID_BITS;
> > +				return val;
> > +			}
> > +			break;
> > +		}
> > +
> >  		/*
> >  		 * If this register does not have an EL1 counterpart,
> >  		 * then read the stored EL2 version.
> > @@ -207,6 +222,19 @@ void vcpu_write_sys_reg(struct kvm_vcpu *vcpu, u64 val, int reg)
> >  		 */
> >  		__vcpu_sys_reg(vcpu, reg) = val;
> >  
> > +		switch (reg) {
> > +		case CNTHCTL_EL2:
> > +			/*
> > +			 * If E2H=0, CNHTCTL_EL2 is a pure shadow register.
> > +			 * Otherwise, some of the bits are backed by
> > +			 * CNTKCTL_EL1, while the rest is kept in memory.
> > +			 * Yes, this is fun stuff.
> > +			 */
> > +			if (vcpu_el2_e2h_is_set(vcpu))
> > +				write_sysreg_el1(val, SYS_CNTKCTL);
> 
> Sorry, but I just can't seem to get my head around why the RES0 bits aren't
> cleared. Is KVM relying on the guest to implement Should-Be-Zero-or-Preserved,
> as per the RES0 definition?

KVM isn't relying on anything. And it isn't about the RES0 bits not
being cleared. It is about the HW not providing storage for some of
the CNTHCTL_EL2 bits when the guest is using CNTKCTL_EL1 as a proxy
for its own view of CNTHCTL_EL2.

Namely, bits outside of CNTKCTL_VALID_BITS are not guaranteed to be
stored until (IIRC) FEAT_NV2p1, which retrospectively fixes the
architecture by mandating that the relevant bits have dedicated
storage.

	M.

-- 
Without deviation from the norm, progress is not possible.

