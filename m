Return-Path: <kvm+bounces-37866-lists+kvm=lfdr.de@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org [IPv6:2604:1380:45e3:2400::1])
	by mail.lfdr.de (Postfix) with ESMTPS id A0904A30D15
	for <lists+kvm@lfdr.de>; Tue, 11 Feb 2025 14:36:04 +0100 (CET)
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 468363A1698
	for <lists+kvm@lfdr.de>; Tue, 11 Feb 2025 13:35:55 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 36202221D92;
	Tue, 11 Feb 2025 13:35:59 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="UFGXf+UU"
X-Original-To: kvm@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 59FCD1F3D58;
	Tue, 11 Feb 2025 13:35:57 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1739280958; cv=none; b=EJmqvYjJC9/19yg5m3pECU12bjnXtbo/AhMdKelHyTz77envBzyxWYfSyAEQwGSI79awGZnkd0Maj1+rIdihqQLpWztXlH9pyIo2EchxToqB2GY+5emdLD6ZYDm/OZI3qklkQrD6CcPZQ04QM7jHymSgQByxvmI1pCgFnyaAiKY=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1739280958; c=relaxed/simple;
	bh=SOkeI7e4t7VteXwUDNB3ih1umv3f81KKWpOhokFRJ4o=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=Mzl+ItZAHUgI36C21tnd/vUWAt0AJFbOUGz3zthjoDvCqJVa/ipkN0NJ0how2Mi3SzTtTAwOzyECp34HjXgjolHf1xRdeLI7l+HspQdx79GTisS176CjNDhy2gRnx6bqJZprSeYj6kQ1LhF/HQyswpvO79FEb6kDDn4jv+OZqQY=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=UFGXf+UU; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id C345BC4CEDD;
	Tue, 11 Feb 2025 13:35:57 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1739280957;
	bh=SOkeI7e4t7VteXwUDNB3ih1umv3f81KKWpOhokFRJ4o=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=UFGXf+UU8Go34ieuiGYzF9Ku/oztMGyBSVkItjb/LtuyTozGAxUocGlhexvkZyqjS
	 dwu6XgWWVpvAZ7QXbqSUwClg6RSg6jX86OQG8+VbcRYAodA5aZDvXcvxjRP5nVSZyD
	 C1jPs/96kOQGDdDCYnJ0pB86m9yE6jR9jR9CkFWh0ULdQ4JnCuj/zlSOK/hYGHl5yw
	 Mj+SgseSvMRxOcCnjzYUxMv9RSLxl9TUzztA/b/0a4tjsT9o1bWy+C8Xtdy2wdFSr3
	 lD7867EcBXHbXuh76BcUVH9dFB+n9WfeiFDk1WBmcn1bcB9NitUQ2qnX6MSzptcZvC
	 nR3GT/USbVgIA==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1thqQd-002zeP-9F;
	Tue, 11 Feb 2025 13:35:55 +0000
Date: Tue, 11 Feb 2025 13:35:54 +0000
Message-ID: <861pw4txhh.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Mark Rutland <mark.rutland@arm.com>
Cc: kvmarm@lists.linux.dev,
	kvm@vger.kernel.org,
	linux-arm-kernel@lists.infradead.org,
	Joey Gouly <joey.gouly@arm.com>,
	Suzuki K Poulose <suzuki.poulose@arm.com>,
	Oliver Upton <oliver.upton@linux.dev>,
	Zenghui Yu <yuzenghui@huawei.com>,
	Fuad Tabba <tabba@google.com>
Subject: Re: [PATCH 06/18] KVM: arm64: Plug FEAT_GCS handling
In-Reply-To: <Z6tEUzwcHVHALIdu@J2N7QTR9R3>
References: <20250210184150.2145093-1-maz@kernel.org>
	<20250210184150.2145093-7-maz@kernel.org>
	<Z6tEUzwcHVHALIdu@J2N7QTR9R3>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: kvm@vger.kernel.org
List-Id: <kvm.vger.kernel.org>
List-Subscribe: <mailto:kvm+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:kvm+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: mark.rutland@arm.com, kvmarm@lists.linux.dev, kvm@vger.kernel.org, linux-arm-kernel@lists.infradead.org, joey.gouly@arm.com, suzuki.poulose@arm.com, oliver.upton@linux.dev, yuzenghui@huawei.com, tabba@google.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Tue, 11 Feb 2025 12:36:35 +0000,
Mark Rutland <mark.rutland@arm.com> wrote:
> 
> On Mon, Feb 10, 2025 at 06:41:37PM +0000, Marc Zyngier wrote:
> > We don't seem to be handling the GCS-specific exception class.
> > Handle it by delivering an UNDEF to the guest, and populate the
> > relevant trap bits.
> > 
> > Signed-off-by: Marc Zyngier <maz@kernel.org>
> > ---
> >  arch/arm64/kvm/handle_exit.c | 11 +++++++++++
> >  arch/arm64/kvm/sys_regs.c    |  8 ++++++++
> >  2 files changed, 19 insertions(+)
> > 
> > diff --git a/arch/arm64/kvm/handle_exit.c b/arch/arm64/kvm/handle_exit.c
> > index 4f8354bf7dc5f..624a78a99e38a 100644
> > --- a/arch/arm64/kvm/handle_exit.c
> > +++ b/arch/arm64/kvm/handle_exit.c
> > @@ -294,6 +294,16 @@ static int handle_svc(struct kvm_vcpu *vcpu)
> >  	return 1;
> >  }
> >  
> > +static int kvm_handle_gcs(struct kvm_vcpu *vcpu)
> > +{
> > +	/* We don't expect GCS, so treat it with contempt */
> > +	if (kvm_has_feat(vcpu->kvm, ID_AA64PFR1_EL1, GCS, IMP))
> > +		WARN_ON_ONCE(1);
> 
> Just to check / better my understanging, do we enforce that this can't
> be exposed to the guest somewhere?
> 
> I see __kvm_read_sanitised_id_reg() masks it out, and the sys_reg_descs
> table has it filtered, but I'm not immediately sure whether that
> prevents host userspace maliciously setting this?

On writing to the idreg, you end-up in set_id_aa64pfr1_el1(), which
calls into set_id_reg(). There, arm64_check_features() compares each
and every feature in that register with the mask and limits that have
been established.

Since GCS is not part of the writable mask, and that it has been
disabled, the only valid value for ID_AA64PFR1_EL1.GCS is 0. A
non-zero value provided by userspace will be caught by the last check
in arm64_check_features(), and an error be returned.

HTH,

	M.

-- 
Without deviation from the norm, progress is not possible.

