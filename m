Return-Path: <kvm+bounces-6992-lists+kvm=lfdr.de@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from sy.mirrors.kernel.org (sy.mirrors.kernel.org [IPv6:2604:1380:40f1:3f00::1])
	by mail.lfdr.de (Postfix) with ESMTPS id 27B6F83BD01
	for <lists+kvm@lfdr.de>; Thu, 25 Jan 2024 10:15:47 +0100 (CET)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sy.mirrors.kernel.org (Postfix) with ESMTPS id BF0B6B274F9
	for <lists+kvm@lfdr.de>; Thu, 25 Jan 2024 09:15:44 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 799BC1BC53;
	Thu, 25 Jan 2024 09:15:34 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="H6xYevna"
X-Original-To: kvm@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A4CB717BA7;
	Thu, 25 Jan 2024 09:15:33 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1706174133; cv=none; b=d+x3+pMyb2jZGaJE2sgWEPLDKbUsx81bh+IdO2wIuU8EsSd8dk/GRri8TKRM+AZG38a9tvRAhWWyL7RKTplg4jrA5B1TU2qwqqkx0JznlK2i+Mk3DhY1+ifZWwrGDnUL8mq/W06gdzWEnc9MQnKprxTMEl/iq2jsYXgGzM+X8oo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1706174133; c=relaxed/simple;
	bh=K9lYZvrqdgnYP3UGmpgkuK/YqJ3JhSr/K1XaHoW8CxE=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=gvskvTaQYsKMrZFyxbuEbQ0M2RekiYJvNt5CMR+xK8gAJgOVvGGPRYVBDYhyfUtEhpo8CaSOiQd/AvxA4QPA2gTsMROU9r7/duzGRmbhfb4lH5FApuU/OurQL62gkP7EAJ01oj3NUQC+gNLd76e2spp9mRcpMyiltmliR1mQPcc=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=H6xYevna; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 173B7C433F1;
	Thu, 25 Jan 2024 09:15:33 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1706174133;
	bh=K9lYZvrqdgnYP3UGmpgkuK/YqJ3JhSr/K1XaHoW8CxE=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=H6xYevnalxh+Yn9zgKcLDclQWboRoKYZnaeI9f0xI0v5QeE9+nR6XqeEbJDS3elwZ
	 1bbOvyg6ryhmWj3xrtkWS0ThR+2teDkJLKotLGjqGDhoE84/LuZINLgQeDBd9tlcOs
	 HHVt82WzbIvBG4tcV/Jmdx9fagCK84ZwlHOm7c29IOIa3Kk7JVGrBdVjEDqt8NTVCx
	 gbi+u6usmihayMcll8JN3NPoILuDuMZDvOoCQJVwyAla53tbhapcBB4E/VdZEnoIIx
	 2ObNGH4/V4Pj+eeqkT7p8AuCTOub3r1jouC3c2SlWrPbyMZdXEZZUGKivgxm16xgBX
	 rqzMg++Fl/d6Q==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1rSvpa-00EfA8-RV;
	Thu, 25 Jan 2024 09:15:30 +0000
Date: Thu, 25 Jan 2024 09:15:30 +0000
Message-ID: <867cjx93kd.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Oliver Upton <oliver.upton@linux.dev>
Cc: kvmarm@lists.linux.dev,
	kvm@vger.kernel.org,
	James Morse <james.morse@arm.com>,
	Suzuki K Poulose <suzuki.poulose@arm.com>,
	Zenghui Yu <yuzenghui@huawei.com>,
	Raghavendra Rao Ananta <rananta@google.com>,
	Jing Zhang <jingzhangos@google.com>
Subject: Re: [PATCH 04/15] KVM: arm64: vgic-its: Walk the LPI xarray in vgic_copy_lpi_list()
In-Reply-To: <20240124204909.105952-5-oliver.upton@linux.dev>
References: <20240124204909.105952-1-oliver.upton@linux.dev>
	<20240124204909.105952-5-oliver.upton@linux.dev>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.1
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: kvm@vger.kernel.org
List-Id: <kvm.vger.kernel.org>
List-Subscribe: <mailto:kvm+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:kvm+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: oliver.upton@linux.dev, kvmarm@lists.linux.dev, kvm@vger.kernel.org, james.morse@arm.com, suzuki.poulose@arm.com, yuzenghui@huawei.com, rananta@google.com, jingzhangos@google.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Wed, 24 Jan 2024 20:48:58 +0000,
Oliver Upton <oliver.upton@linux.dev> wrote:
> 
> Start iterating the LPI xarray in anticipation of removing the LPI
> linked-list.
> 
> Signed-off-by: Oliver Upton <oliver.upton@linux.dev>
> ---
>  arch/arm64/kvm/vgic/vgic-its.c | 7 ++++++-
>  1 file changed, 6 insertions(+), 1 deletion(-)
> 
> diff --git a/arch/arm64/kvm/vgic/vgic-its.c b/arch/arm64/kvm/vgic/vgic-its.c
> index f152d670113f..a2d95a279798 100644
> --- a/arch/arm64/kvm/vgic/vgic-its.c
> +++ b/arch/arm64/kvm/vgic/vgic-its.c
> @@ -332,6 +332,7 @@ static int update_lpi_config(struct kvm *kvm, struct vgic_irq *irq,
>  int vgic_copy_lpi_list(struct kvm *kvm, struct kvm_vcpu *vcpu, u32 **intid_ptr)
>  {
>  	struct vgic_dist *dist = &kvm->arch.vgic;
> +	XA_STATE(xas, &dist->lpi_xa, 0);

Why 0? LPIs start at 8192 (aka GIC_LPI_OFFSET), so it'd probably make
sense to use that.

>  	struct vgic_irq *irq;
>  	unsigned long flags;
>  	u32 *intids;
> @@ -350,7 +351,9 @@ int vgic_copy_lpi_list(struct kvm *kvm, struct kvm_vcpu *vcpu, u32 **intid_ptr)
>  		return -ENOMEM;
>  
>  	raw_spin_lock_irqsave(&dist->lpi_list_lock, flags);
> -	list_for_each_entry(irq, &dist->lpi_list_head, lpi_list) {
> +	rcu_read_lock();
> +
> +	xas_for_each(&xas, irq, U32_MAX) {

Similar thing: we advertise 16 bits of ID space (described as
INTERRUPT_ID_BITS_ITS), so capping at that level would make it more
understandable.

>  		if (i == irq_count)
>  			break;
>  		/* We don't need to "get" the IRQ, as we hold the list lock. */
> @@ -358,6 +361,8 @@ int vgic_copy_lpi_list(struct kvm *kvm, struct kvm_vcpu *vcpu, u32 **intid_ptr)
>  			continue;
>  		intids[i++] = irq->intid;
>  	}
> +
> +	rcu_read_unlock();
>  	raw_spin_unlock_irqrestore(&dist->lpi_list_lock, flags);
>  
>  	*intid_ptr = intids;

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.

