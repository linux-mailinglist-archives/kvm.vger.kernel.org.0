Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id D8220683894
	for <lists+kvm@lfdr.de>; Tue, 31 Jan 2023 22:27:05 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232161AbjAaV1E (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Tue, 31 Jan 2023 16:27:04 -0500
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:50192 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229962AbjAaV1C (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 31 Jan 2023 16:27:02 -0500
Received: from ams.source.kernel.org (ams.source.kernel.org [145.40.68.75])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 721602A161
        for <kvm@vger.kernel.org>; Tue, 31 Jan 2023 13:27:01 -0800 (PST)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by ams.source.kernel.org (Postfix) with ESMTPS id 27CCDB81EE8
        for <kvm@vger.kernel.org>; Tue, 31 Jan 2023 21:27:00 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id CA0ABC433EF;
        Tue, 31 Jan 2023 21:26:58 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1675200418;
        bh=9Zg0O6TBm+rTRWrq941GVC7/jc+aBKw/h5KKsoSoJ68=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=T2ZseHNas9jSrcJfRk+s5Q4dk8gXu4K6DCqYWFTEExV5gIBBIrVNyd6xRwxvYRZ5K
         m/BB3mo8v7DoX7tyF6QwSR1YYhUFxI1b0BtFcYmum9AqGSg2cXlXqIwymxKM6Dy2/E
         2hxVTNa/hruJt/CQ9W9x363wUvUTDx+hUWP7etbxfs1rgMdw7B1gDzJD8Hfnq1aXQb
         M9i+dL+eCvJBM8RzpxjSoH2rk948A6qDlrI6BTJD4ANphmXGpq56AWclWC/e/6bpgK
         IViPzXh6WQKcv+hyMW0U7nSTEkKGTOvCykHFU5nshO7H4AAvO7ykFRKp7cOmG2L1qO
         zEkZnkF5Hofpw==
Received: from sofa.misterjones.org ([185.219.108.64] helo=wait-a-minute.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.95)
        (envelope-from <maz@kernel.org>)
        id 1pMy9Y-006KPL-FC;
        Tue, 31 Jan 2023 21:26:56 +0000
Date:   Tue, 31 Jan 2023 21:26:56 +0000
Message-ID: <871qnae6ov.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Oliver Upton <oliver.upton@linux.dev>
Cc:     Suzuki K Poulose <suzuki.poulose@arm.com>, kvmarm@lists.linux.dev,
        kvm@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
        Alexandru Elisei <alexandru.elisei@arm.com>,
        Andre Przywara <andre.przywara@arm.com>,
        Chase Conklin <chase.conklin@arm.com>,
        Christoffer Dall <christoffer.dall@arm.com>,
        Ganapatrao Kulkarni <gankulkarni@os.amperecomputing.com>,
        Jintack Lim <jintack@cs.columbia.edu>,
        Russell King <rmk+kernel@armlinux.org.uk>,
        James Morse <james.morse@arm.com>,
        Zenghui Yu <yuzenghui@huawei.com>
Subject: Re: [PATCH v8 01/69] arm64: Add ARM64_HAS_NESTED_VIRT cpufeature
In-Reply-To: <Y9l0PzgnKZiFJjvp@google.com>
References: <20230131092504.2880505-1-maz@kernel.org>
        <20230131092504.2880505-2-maz@kernel.org>
        <b7dbe85e-c7f8-48ad-e1af-85befabd8509@arm.com>
        <86cz6u248j.wl-maz@kernel.org>
        <3c15760c-c76f-3d5d-a661-442459ce4e07@arm.com>
        <Y9l0PzgnKZiFJjvp@google.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: oliver.upton@linux.dev, suzuki.poulose@arm.com, kvmarm@lists.linux.dev, kvm@vger.kernel.org, linux-arm-kernel@lists.infradead.org, alexandru.elisei@arm.com, andre.przywara@arm.com, chase.conklin@arm.com, christoffer.dall@arm.com, gankulkarni@os.amperecomputing.com, jintack@cs.columbia.edu, rmk+kernel@armlinux.org.uk, james.morse@arm.com, yuzenghui@huawei.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
X-Spam-Status: No, score=-7.1 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_HI,
        SPF_HELO_NONE,SPF_PASS autolearn=ham autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

On Tue, 31 Jan 2023 20:04:15 +0000,
Oliver Upton <oliver.upton@linux.dev> wrote:
> 
> On Tue, Jan 31, 2023 at 05:34:39PM +0000, Suzuki K Poulose wrote:
> > On 31/01/2023 14:00, Marc Zyngier wrote:
> 
> [...]
> 
> > > What is exactly the objection here? NV is more or less a VHE++ mode,
> > > but is also completely experimental and incomplete.
> > 
> > I am all in for making this an "optional", only enabled it when "I know
> > what I want".
> > 
> > kvm-arm.mode=nv kind of seems that the KVM driver is conditioned
> > mainly for running NV (comparing with the other existing options
> > for kvm-arm.mode).
> > 
> > In reality, as you confirmed, NV is an *additional* capability
> > of a VHE hypervisor. So it would be good to "opt" in for "nv" capability
> > support.
> > 
> > e.g,
> > 
> >    kvm-arm.nv=on
> > 
> > Thinking more about it, either is fine.
> 
> Marc, I'm curious, how do you plan to glue hVHE + NV together (if at
> all)? We may need two separate options for this so the user could
> separately configure NV for their hVHE KVM instance.

I really don't plan to support them together. But if we wanted to
support something, I'd rather express it as a composition of the
various options, as I suggested to Suzuki earlier. Something along the
lines of:

	kvm-arm.mode=hvhe,nested

But the extra complexity is mind-boggling, frankly. And the result
will suck terribly. NV is already exit-heavy, compared to single-level
virtualisation. But now you double the cost of the exit by moving all
the load/put work into the entry-exit phase.

To give you an idea, an L2 guest under a hVHE L1 is ~30% slower than
the same guest running under a VHE L1 with an exit-heavy workload
(virtio-9p + hackbench). Making the L0 host hVHE would be even worse.
We may be able to improve it to some extent, but it will always be the
sucky option.

Also, given where we are at the support stage (we basically offer an
ARMv8.1 L1 environment), the impetus to support this sort of
contraption is..  hrmm... low. I'd rather spend my energy on
architecture correctness and feature-parity with single level.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
