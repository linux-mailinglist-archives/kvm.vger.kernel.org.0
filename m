Return-Path: <kvm+bounces-28999-lists+kvm=lfdr.de@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from sy.mirrors.kernel.org (sy.mirrors.kernel.org [147.75.48.161])
	by mail.lfdr.de (Postfix) with ESMTPS id 372999A0BC8
	for <lists+kvm@lfdr.de>; Wed, 16 Oct 2024 15:41:50 +0200 (CEST)
Received: from smtp.subspace.kernel.org (wormhole.subspace.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sy.mirrors.kernel.org (Postfix) with ESMTPS id BD138B23A94
	for <lists+kvm@lfdr.de>; Wed, 16 Oct 2024 13:41:47 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 36747209F3C;
	Wed, 16 Oct 2024 13:41:37 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="OVFfD8PT"
X-Original-To: kvm@vger.kernel.org
Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 5C5F0125B9;
	Wed, 16 Oct 2024 13:41:35 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1729086096; cv=none; b=d78aVLPkt4NJBYX2DxQRfBriNMJ8fdr92ByFAMSSBVScpQr5Tm3Tdsn7fttqblgEGY7cbSWXMloUuVuzWM275tkSqNPMuGqCugXaMAt9l2+KtyVefcGFcZtiLM83qorESOszQpOLBZWQyX4/G9JyErWwujOtWFsoyoC+BMES7GE=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1729086096; c=relaxed/simple;
	bh=tmglpRF6ockTWwBT1N80CsCLOq6CQEoYvcNiTLS5Vrc=;
	h=Date:Message-ID:From:To:Cc:Subject:In-Reply-To:References:
	 MIME-Version:Content-Type; b=Pvy/4Yh0Hw+lVI17PwbFdEExYUuv1Mlv2cCyckFNT2+kY22qk7lYZ6vn01/4PbLE5VVSmWnqP2WjGKAG1rtgK+qFiJ3ouM8R6scc+EDy0IfFzb99J10QyJGP5a15XwtIDjTwek/ojbQ0RcU68xqhymQda1TsMVpLKsIbdj2iz7w=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=OVFfD8PT; arc=none smtp.client-ip=10.30.226.201
Received: by smtp.kernel.org (Postfix) with ESMTPSA id CFE09C4CEC5;
	Wed, 16 Oct 2024 13:41:35 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1729086095;
	bh=tmglpRF6ockTWwBT1N80CsCLOq6CQEoYvcNiTLS5Vrc=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=OVFfD8PTrs+KPUz1TPjkkG41G8USdYp01IruRF/M/oBB0xCdeP6HX1gK5helfob1T
	 ft4DHyJfkR1rmP3cVc5ENjt1YuwKSwqAlJgpfyPxLcFWC3LvsGCieZuYBxtr0TZitJ
	 l3dgNZWSQxPonXrQ+qJJopq+yOeioBNS/01RhhUXDbuC00mBfiRFN3L/hT0kXHIKiY
	 ngNOoIe9v7VOyOl+gueGpVzyowxH+PRrn8tJdq1QZdyAZuBaK9zZiGAQICPSZUB3l2
	 FJwSABVE6o8G/uyd6LQ2qp0pYFsfxTUagtTDZRQw5P4qzCT3+jnottDW/BlnGlY4uX
	 ApLh4AlY83A7w==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
	by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
	(Exim 4.95)
	(envelope-from <maz@kernel.org>)
	id 1t14HN-0046Ou-IS;
	Wed, 16 Oct 2024 14:41:33 +0100
Date: Wed, 16 Oct 2024 14:41:33 +0100
Message-ID: <86zfn4412q.wl-maz@kernel.org>
From: Marc Zyngier <maz@kernel.org>
To: Alexandru Elisei <alexandru.elisei@arm.com>
Cc: kvmarm@lists.linux.dev,
	linux-arm-kernel@lists.infradead.org,
	kvm@vger.kernel.org,
	Joey Gouly <joey.gouly@arm.com>,
	Suzuki K Poulose <suzuki.poulose@arm.com>,
	Oliver Upton <oliver.upton@linux.dev>,
	Zenghui Yu <yuzenghui@huawei.com>,
	Mark Brown <broonie@kernel.org>
Subject: Re: [PATCH v4 06/36] KVM: arm64: nv: Handle CNTHCTL_EL2 specially
In-Reply-To: <Zw-9UvkO6eJkAaYQ@raptor>
References: <20241009190019.3222687-1-maz@kernel.org>
	<20241009190019.3222687-7-maz@kernel.org>
	<Zw-JTojEW5ZXa8R-@raptor>
	<861q0g5ls1.wl-maz@kernel.org>
	<Zw-9UvkO6eJkAaYQ@raptor>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/29.4
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
Precedence: bulk
X-Mailing-List: kvm@vger.kernel.org
List-Id: <kvm.vger.kernel.org>
List-Subscribe: <mailto:kvm+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:kvm+unsubscribe@vger.kernel.org>
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: alexandru.elisei@arm.com, kvmarm@lists.linux.dev, linux-arm-kernel@lists.infradead.org, kvm@vger.kernel.org, joey.gouly@arm.com, suzuki.poulose@arm.com, oliver.upton@linux.dev, yuzenghui@huawei.com, broonie@kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false

On Wed, 16 Oct 2024 14:19:14 +0100,
Alexandru Elisei <alexandru.elisei@arm.com> wrote:
> 
> > > > @@ -207,6 +222,19 @@ void vcpu_write_sys_reg(struct kvm_vcpu *vcpu, u64 val, int reg)
> > > >  		 */
> > > >  		__vcpu_sys_reg(vcpu, reg) = val;
> > > >  
> > > > +		switch (reg) {
> > > > +		case CNTHCTL_EL2:
> > > > +			/*
> > > > +			 * If E2H=0, CNHTCTL_EL2 is a pure shadow register.
> > > > +			 * Otherwise, some of the bits are backed by
> > > > +			 * CNTKCTL_EL1, while the rest is kept in memory.
> > > > +			 * Yes, this is fun stuff.
> > > > +			 */
> > > > +			if (vcpu_el2_e2h_is_set(vcpu))
> > > > +				write_sysreg_el1(val, SYS_CNTKCTL);
> > > 
> > > Sorry, but I just can't seem to get my head around why the RES0 bits aren't
> > > cleared. Is KVM relying on the guest to implement Should-Be-Zero-or-Preserved,
> > > as per the RES0 definition?
> > 
> > KVM isn't relying on anything. And it isn't about the RES0 bits not
> > being cleared. It is about the HW not providing storage for some of
> > the CNTHCTL_EL2 bits when the guest is using CNTKCTL_EL1 as a proxy
> > for its own view of CNTHCTL_EL2.
> > 
> > Namely, bits outside of CNTKCTL_VALID_BITS are not guaranteed to be
> > stored until (IIRC) FEAT_NV2p1, which retrospectively fixes the
> > architecture by mandating that the relevant bits have dedicated
> > storage.
> 
> The definition for RES0 says:
> 
> 'A bit that is RES0 in a context is reserved for possible future use in that
> context. To preserve forward compatibility, software:
>  * Must not rely on the bit reading as 0.
>  * Must use an SBZP policy to write to the bit.'
> 
> where Should-Be-Zero-of-Preserved (SBZP):
> 
> 'When writing this field, software must either write all 0s to this field or, if
> the register is being restored from a previously read state, write the
> previously read value to this field. If this is not done, then the result is
> unpredictable.'

And? I can quote the ARM ARM too, but that's not going to lead us
anywhere if you don't explain why what you quote is related to the
problem at hand (hint, I don't think it is).

> And what about the rest of the RES0 bits from CNTKCTL_EL1, those that are RES0
> in both registers?

What about them *what*?

It would definitely help if you didn't write in riddles and actually
spell out what you mean. If you think this code is wrong, please
explain why you think it is wrong, and maybe we'll be able to make
some progress.


Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.

