Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 4F47E3F14CD
	for <lists+kvm@lfdr.de>; Thu, 19 Aug 2021 10:05:47 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S237131AbhHSIF7 (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Thu, 19 Aug 2021 04:05:59 -0400
Received: from mail.kernel.org ([198.145.29.99]:42734 "EHLO mail.kernel.org"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S237290AbhHSIFa (ORCPT <rfc822;kvm@vger.kernel.org>);
        Thu, 19 Aug 2021 04:05:30 -0400
Received: from disco-boy.misterjones.org (disco-boy.misterjones.org [51.254.78.96])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by mail.kernel.org (Postfix) with ESMTPSA id 9A0B86113A;
        Thu, 19 Aug 2021 08:04:40 +0000 (UTC)
Received: from sofa.misterjones.org ([185.219.108.64] helo=why.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.94.2)
        (envelope-from <maz@kernel.org>)
        id 1mGd2U-005vFh-HF; Thu, 19 Aug 2021 09:04:38 +0100
Date:   Thu, 19 Aug 2021 09:04:38 +0100
Message-ID: <877dghsvvt.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     Oliver Upton <oupton@google.com>
Cc:     Ricardo Koller <ricarkol@google.com>, kvmarm@lists.cs.columbia.edu,
        kvm@vger.kernel.org, james.morse@arm.com, Alexandru.Elisei@arm.com,
        drjones@redhat.com, catalin.marinas@arm.com,
        suzuki.poulose@arm.com, jingzhangos@google.com, pshier@google.com,
        rananta@google.com, reijiw@google.com
Subject: Re: [PATCH] KVM: arm64: vgic: drop WARN from vgic_get_irq
In-Reply-To: <CAOQ_Qsgy7d7pWc=0AHpR2LHO67Z=gCa-TV46NxXMsFP8yqOzTw@mail.gmail.com>
References: <20210818213205.598471-1-ricarkol@google.com>
        <CAOQ_QshVenuri8WdZdEis4szCv03U0KRNt4CqDNtvUBsqBqUoA@mail.gmail.com>
        <YR1/YEY8DX+r05nt@google.com>
        <CAOQ_Qsgy7d7pWc=0AHpR2LHO67Z=gCa-TV46NxXMsFP8yqOzTw@mail.gmail.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/27.1
 (x86_64-pc-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: oupton@google.com, ricarkol@google.com, kvmarm@lists.cs.columbia.edu, kvm@vger.kernel.org, james.morse@arm.com, Alexandru.Elisei@arm.com, drjones@redhat.com, catalin.marinas@arm.com, suzuki.poulose@arm.com, jingzhangos@google.com, pshier@google.com, rananta@google.com, reijiw@google.com
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

On Thu, 19 Aug 2021 08:41:19 +0100,
Oliver Upton <oupton@google.com> wrote:
> 
> On Wed, Aug 18, 2021 at 2:45 PM Ricardo Koller <ricarkol@google.com> wrote:
> >
> > On Wed, Aug 18, 2021 at 02:34:03PM -0700, Oliver Upton wrote:
> > > Hi Ricardo,
> > >
> > > On Wed, Aug 18, 2021 at 2:32 PM Ricardo Koller <ricarkol@google.com> wrote:
> > > >
> > > > vgic_get_irq(intid) is used all over the vgic code in order to get a
> > > > reference to a struct irq. It warns whenever intid is not a valid number
> > > > (like when it's a reserved IRQ number). The issue is that this warning
> > > > can be triggered from userspace (e.g., KVM_IRQ_LINE for intid 1020).
> > > >
> > > > Drop the WARN call from vgic_get_irq.
> > > >
> > > > Signed-off-by: Ricardo Koller <ricarkol@google.com>
> > > > ---
> > > >  arch/arm64/kvm/vgic/vgic.c | 1 -
> > > >  1 file changed, 1 deletion(-)
> > > >
> > > > diff --git a/arch/arm64/kvm/vgic/vgic.c b/arch/arm64/kvm/vgic/vgic.c
> > > > index 111bff47e471..81cec508d413 100644
> > > > --- a/arch/arm64/kvm/vgic/vgic.c
> > > > +++ b/arch/arm64/kvm/vgic/vgic.c
> > > > @@ -106,7 +106,6 @@ struct vgic_irq *vgic_get_irq(struct kvm *kvm, struct kvm_vcpu *vcpu,
> > > >         if (intid >= VGIC_MIN_LPI)
> > > >                 return vgic_get_lpi(kvm, intid);
> > > >
> > > > -       WARN(1, "Looking up struct vgic_irq for reserved INTID");
> > >
> > > Could we maybe downgrade the message to WARN_ONCE() (to get a stack)
> > > or pr_warn_ratelimited()? I agree it is problematic that userspace can
> > > cause this WARN to fire, but it'd be helpful for debugging too.
> > >
> >
> > Was thinking about that, until I found this in bug.h:
> >
> >         /*
> >          * WARN(), WARN_ON(), WARN_ON_ONCE, and so on can be used to report
> >          * significant kernel issues that need prompt attention if they should ever
> >          * appear at runtime.
> >          *
> >          * Do not use these macros when checking for invalid external inputs
> >          * (e.g. invalid system call arguments, or invalid data coming from
> >          * network/devices),
> >
> > Just in case, KVM_IRQ_LINE returns -EINVAL for an invalid intid (like
> > 1020). I think it's more appropriate for the vmm to log it. What do you
> > think?
> 
> vgic_get_irq() is called in a bunch of other places though, right?
> IOW, intid doesn't necessarily come from userspace. In fact, I believe
> KVM_IRQ_LINE is the only place we pass a value from userspace to
> vgic_get_irq() (don't quote me on that).
> 
> Perhaps instead the fix could be to explicitly check that the intid
> from userspace is valid and exit early rather than count on
> vgic_get_irq() to do the right thing.

vgic_get_irq() is designed to do the right thing. Returning NULL is
the way it reports an error, and this NULL value is already checked at
when directly provided either by the VMM or the guest. If we missed
any of those, that would be what needs addressing.  Obtaining a NULL
pointer is a good way to catch those.

In general, the kernel log is not how we report userspace errors (we
have been there before...). It is slow, noisy, unclear and ultimately
leaks information. If you really want something, then a pr_debug is a
potential tool as it can be dynamically enabled with the right
configuration.

Thanks,

	M.

-- 
Without deviation from the norm, progress is not possible.
