Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id AD019498306
	for <lists+kvm@lfdr.de>; Mon, 24 Jan 2022 16:06:10 +0100 (CET)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S235327AbiAXPGI (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Mon, 24 Jan 2022 10:06:08 -0500
Received: from us-smtp-delivery-124.mimecast.com ([170.10.129.124]:25680 "EHLO
        us-smtp-delivery-124.mimecast.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S230516AbiAXPGH (ORCPT
        <rfc822;kvm@vger.kernel.org>); Mon, 24 Jan 2022 10:06:07 -0500
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1643036766;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         in-reply-to:in-reply-to:references:references;
        bh=yT15njeH2ZGkpu7ZS3oPTgK7TWcdiX023qx+wPajz48=;
        b=Syq1pQJzty64Xzai18XXXd2wl+sphscTKq5x/ZgUQxsyF1uygPKjfzUdIG3/60TYlN5vQL
        cKQyZFkwXUWhe2woK3VqPnXw0//AY00zQu13d/W3OXrRTMuND0KevndVRnH19AKWRpXMkP
        3W5Xr8J73Q5tzm/JC+5ox2KPixTjIac=
Received: from mimecast-mx01.redhat.com (mimecast-mx01.redhat.com
 [209.132.183.4]) by relay.mimecast.com with ESMTP with STARTTLS
 (version=TLSv1.2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 us-mta-385-1dW4Z5x2O6ChP6S9w5zqSQ-1; Mon, 24 Jan 2022 10:06:03 -0500
X-MC-Unique: 1dW4Z5x2O6ChP6S9w5zqSQ-1
Received: from smtp.corp.redhat.com (int-mx06.intmail.prod.int.phx2.redhat.com [10.5.11.16])
        (using TLSv1.2 with cipher AECDH-AES256-SHA (256/256 bits))
        (No client certificate requested)
        by mimecast-mx01.redhat.com (Postfix) with ESMTPS id 1739B1091DA2;
        Mon, 24 Jan 2022 15:06:01 +0000 (UTC)
Received: from blackfin.pond.sub.org (ovpn-112-3.ams2.redhat.com [10.36.112.3])
        by smtp.corp.redhat.com (Postfix) with ESMTPS id D67E77BB6C;
        Mon, 24 Jan 2022 15:05:59 +0000 (UTC)
Received: by blackfin.pond.sub.org (Postfix, from userid 1000)
        id 82F691138640; Mon, 24 Jan 2022 16:05:58 +0100 (CET)
From:   Markus Armbruster <armbru@redhat.com>
To:     Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
Cc:     qemu-devel@nongnu.org, kvm@vger.kernel.org, lvivier@redhat.com,
        thuth@redhat.com, mtosatti@redhat.com,
        richard.henderson@linaro.org, pbonzini@redhat.com,
        eblake@redhat.com, wangyanan55@huawei.com, f4bug@amsat.org,
        marcel.apfelbaum@gmail.com, eduardo@habkost.net,
        valery.vdovin.s@gmail.com, den@openvz.org,
        Valeriy Vdovin <valeriy.vdovin@virtuozzo.com>
Subject: Re: [PATCH v17] qapi: introduce 'x-query-x86-cpuid' QMP command.
References: <20220121163943.2720015-1-vsementsov@virtuozzo.com>
Date:   Mon, 24 Jan 2022 16:05:58 +0100
In-Reply-To: <20220121163943.2720015-1-vsementsov@virtuozzo.com> (Vladimir
        Sementsov-Ogievskiy's message of "Fri, 21 Jan 2022 17:39:43 +0100")
Message-ID: <87czkh6und.fsf@dusky.pond.sub.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/27.2 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
X-Scanned-By: MIMEDefang 2.79 on 10.5.11.16
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com> writes:

> From: Valeriy Vdovin <valeriy.vdovin@virtuozzo.com>
>
> Introducing new QMP command 'query-x86-cpuid'. This command can be
> used to get virtualized cpu model info generated by QEMU during VM
> initialization in the form of cpuid representation.
>
> Diving into more details about virtual CPU generation: QEMU first
> parses '-cpu' command line option. From there it takes the name of the
> model as the basis for feature set of the new virtual CPU. After that
> it uses trailing '-cpu' options, that state if additional cpu features
> should be present on the virtual CPU or excluded from it (tokens
> '+'/'-' or '=on'/'=off').
> After that QEMU checks if the host's cpu can actually support the
> derived feature set and applies host limitations to it.
> After this initialization procedure, virtual CPU has it's model and
> vendor names, and a working feature set and is ready for
> identification instructions such as CPUID.
>
> To learn exactly how virtual CPU is presented to the guest machine via
> CPUID instruction, new QMP command can be used. By calling
> 'query-x86-cpuid' command, one can get a full listing of all CPUID
> leaves with subleaves which are supported by the initialized virtual
> CPU.
>
> Other than debug, the command is useful in cases when we would like to
> utilize QEMU's virtual CPU initialization routines and put the
> retrieved values into kernel CPUID overriding mechanics for more
> precise control over how various processes perceive its underlying
> hardware with container processes as a good example.
>
> The command is specific to x86. It is currenly only implemented for
> KVM acceleator.
>
> Output format:
> The output is a plain list of leaf/subleaf argument combinations, that
> return 4 words in registers EAX, EBX, ECX, EDX.
>
> Use example:
> qmp_request: {
>   "execute": "x-query-x86-cpuid"
> }
>
> qmp_response: {
>   "return": [
>     {
>       "eax": 1073741825,
>       "edx": 77,
>       "in-eax": 1073741824,
>       "ecx": 1447775574,
>       "ebx": 1263359563
>     },
>     {
>       "eax": 16777339,
>       "edx": 0,
>       "in-eax": 1073741825,
>       "ecx": 0,
>       "ebx": 0
>     },
>     {
>       "eax": 13,
>       "edx": 1231384169,
>       "in-eax": 0,
>       "ecx": 1818588270,
>       "ebx": 1970169159
>     },
>     {
>       "eax": 198354,
>       "edx": 126614527,
>       "in-eax": 1,
>       "ecx": 2176328193,
>       "ebx": 2048
>     },
>     ....
>     {
>       "eax": 12328,
>       "edx": 0,
>       "in-eax": 2147483656,
>       "ecx": 0,
>       "ebx": 0
>     }
>   ]
> }
>
> Signed-off-by: Valeriy Vdovin <valeriy.vdovin@virtuozzo.com>
> Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
> ---
>
> v17: wrap long lines, add QAPI feature 'unstable' [Markus]
>
>  qapi/machine-target.json   | 50 ++++++++++++++++++++++++++++++++++++++
>  softmmu/cpus.c             |  2 +-
>  target/i386/kvm/kvm-stub.c |  9 +++++++
>  target/i386/kvm/kvm.c      | 44 +++++++++++++++++++++++++++++++++
>  tests/qtest/qmp-cmd-test.c |  1 +
>  5 files changed, 105 insertions(+), 1 deletion(-)
>
> diff --git a/qapi/machine-target.json b/qapi/machine-target.json
> index f5ec4bc172..1568e17e74 100644
> --- a/qapi/machine-target.json
> +++ b/qapi/machine-target.json
> @@ -341,3 +341,53 @@
>                     'TARGET_I386',
>                     'TARGET_S390X',
>                     'TARGET_MIPS' ] } }
> +
> +##
> +# @CpuidEntry:
> +#
> +# A single entry of a CPUID response.
> +#
> +# One entry holds full set of information (leaf) returned to the guest
> +# in response to it calling a CPUID instruction with eax, ecx used as
> +# the arguments to that instruction. ecx is an optional argument as
> +# not all of the leaves support it.
> +#
> +# @in-eax: CPUID argument in eax
> +# @in-ecx: CPUID argument in ecx
> +# @eax: CPUID result in eax
> +# @ebx: CPUID result in ebx
> +# @ecx: CPUID result in ecx
> +# @edx: CPUID result in edx
> +#
> +# Since: 7.0
> +##
> +{ 'struct': 'CpuidEntry',
> +  'data': { 'in-eax' : 'uint32',
> +            '*in-ecx' : 'uint32',
> +            'eax' : 'uint32',
> +            'ebx' : 'uint32',
> +            'ecx' : 'uint32',
> +            'edx' : 'uint32'
> +          },
> +  'if': 'TARGET_I386' }
> +
> +##
> +# @x-query-x86-cpuid:
> +#
> +# Returns raw data from the emulated CPUID table for the first VCPU.
> +# The emulated CPUID table defines the response to the CPUID
> +# instruction when executed by the guest operating system.
> +#
> +# Features:
> +# @unstable: This command is experimental.
> +#
> +# Returns: a list of CpuidEntry. Returns error when qemu is configured
> +#          with --disable-kvm flag or if qemu is run with any other
> +#          accelerator than KVM.
> +#
> +# Since: 7.0
> +##
> +{ 'command': 'x-query-x86-cpuid',
> +  'returns': [ 'CpuidEntry' ],
> +  'if': 'TARGET_I386',
> +  'features': [ 'unstable' ] }

QAPI schema
Acked-by: Markus Armbruster <armbru@redhat.com>

[...]

