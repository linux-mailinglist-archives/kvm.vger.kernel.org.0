Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id F228840A567
	for <lists+kvm@lfdr.de>; Tue, 14 Sep 2021 06:29:38 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S232547AbhINEay (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Tue, 14 Sep 2021 00:30:54 -0400
Received: from mga17.intel.com ([192.55.52.151]:22694 "EHLO mga17.intel.com"
        rhost-flags-OK-OK-OK-OK) by vger.kernel.org with ESMTP
        id S230415AbhINEaw (ORCPT <rfc822;kvm@vger.kernel.org>);
        Tue, 14 Sep 2021 00:30:52 -0400
X-IronPort-AV: E=McAfee;i="6200,9189,10106"; a="202047550"
X-IronPort-AV: E=Sophos;i="5.85,291,1624345200"; 
   d="scan'208";a="202047550"
Received: from fmsmga003.fm.intel.com ([10.253.24.29])
  by fmsmga107.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 13 Sep 2021 21:29:34 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.85,291,1624345200"; 
   d="scan'208";a="543660487"
Received: from unknown (HELO coxu-arch-shz.sh.intel.com) ([10.239.160.21])
  by FMSMGA003.fm.intel.com with ESMTP; 13 Sep 2021 21:29:32 -0700
From:   Colin Xu <colin.xu@intel.com>
To:     alex.williamson@redhat.com
Cc:     kvm@vger.kernel.org, colin.xu@intel.com, zhenyuw@linux.intel.com,
        hang.yuan@linux.intel.com, swee.yee.fonn@intel.com,
        fred.gao@intel.com
Subject: [PATCH v5] vfio/pci: Add OpRegion 2.0+ Extended VBT support.
Date:   Tue, 14 Sep 2021 12:29:29 +0800
Message-Id: <20210914042929.94501-1-colin.xu@intel.com>
X-Mailer: git-send-email 2.33.0
In-Reply-To: <a89d4682-7bc3-721c-b594-e235e73e4ec9@outlook.office365.com>
References: <a89d4682-7bc3-721c-b594-e235e73e4ec9@outlook.office365.com>
MIME-Version: 1.0
Content-Transfer-Encoding: base64
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

RHVlIHRvIGhpc3RvcmljYWwgcmVhc29uLCBzb21lIGxlZ2FjeSBzaGlwcGVkIHN5c3RlbSBkb2Vz
bid0IGZvbGxvdwpPcFJlZ2lvbiAyLjEgc3BlYyBidXQgc3RpbGwgc3RpY2sgdG8gT3BSZWdpb24g
Mi4wLCBpbiB3aGljaCB0aGUgZXh0ZW5kZWQKVkJUIGlzIG5vdCBjb250aWd1b3VzIGFmdGVyIE9w
UmVnaW9uIGluIHBoeXNpY2FsIGFkZHJlc3MsIGJ1dCBhbnkKbG9jYXRpb24gcG9pbnRlZCBieSBS
VkRBIHZpYSBhYnNvbHV0ZSBhZGRyZXNzLiBBbHNvIGFsdGhvdWdoIGN1cnJlbnQKT3BSZWdpb24g
Mi4xKyBzeXN0ZW1zIGFwcGVhcnMgdGhhdCB0aGUgZXh0ZW5kZWQgVkJUIGZvbGxvd3MgT3BSZWdp
b24sClJWREEgaXMgdGhlIHJlbGF0aXZlIGFkZHJlc3MgdG8gT3BSZWdpb24gaGVhZCwgdGhlIGV4
dGVuZGVkIFZCVCBsb2NhdGlvbgptYXkgY2hhbmdlIHRvIG5vbi1jb250aWd1b3VzIHRvIE9wUmVn
aW9uLiBJbiBib3RoIGNhc2VzLCBpdCdzIGltcG9zc2libGUKdG8gbWFwIGEgY29udGlndW91cyBy
YW5nZSB0byBob2xkIGJvdGggT3BSZWdpb24gYW5kIHRoZSBleHRlbmRlZCBWQlQgYW5kCmV4cG9z
ZSB2aWEgb25lIHZmaW8gcmVnaW9uLgoKVGhlIG9ubHkgZGlmZmVyZW5jZSBiZXR3ZWVuIE9wUmVn
aW9uIDIuMCBhbmQgMi4xIGlzIHdoZXJlIGV4dGVuZGVkClZCVCBpcyBzdG9yZWQ6IEZvciAyLjAs
IFJWREEgaXMgdGhlIGFic29sdXRlIGFkZHJlc3Mgb2YgZXh0ZW5kZWQgVkJUCndoaWxlIGZvciAy
LjEsIFJWREEgaXMgdGhlIHJlbGF0aXZlIGFkZHJlc3Mgb2YgZXh0ZW5kZWQgVkJUIHRvIE9wUmVn
aW9uCmJhZXMsIGFuZCB0aGVyZSBpcyBubyBvdGhlciBkaWZmZXJlbmNlIGJldHdlZW4gT3BSZWdp
b24gMi4wIGFuZCAyLjEuClRvIHN1cHBvcnQgdGhlIG5vbi1jb250aWd1b3VzIHJlZ2lvbiBjYXNl
IGFzIGRlc2NyaWJlZCwgdGhlIHVwZGF0ZWQgcmVhZApvcCB3aWxsIHBhdGNoIE9wUmVnaW9uIHZl
cnNpb24gYW5kIFJWREEgb24tdGhlLWZseSBhY2NvcmRpbmdseS4gU28gdGhhdApmcm9tIHZmaW8g
aWdkIE9wUmVnaW9uIHZpZXcsIG9ubHkgMi4xKyB3aXRoIGNvbnRpZ3VvdXMgZXh0ZW5kZWQgVkJU
CmFmdGVyIE9wUmVnaW9uIGlzIGV4cG9zZWQsIHJlZ2FyZGxlc3MgdGhlIHVuZGVybmVhdGggaG9z
dCBPcFJlZ2lvbiBpcwoyLjAgb3IgMi4xKy4gVGhlIG1lY2hhbmlzbSBtYWtlcyBpdCBwb3NzaWJs
ZSB0byBzdXBwb3J0IGxlZ2FjeSBPcFJlZ2lvbgoyLjAgZXh0ZW5kZWQgVkJUIHN5c3RlbXMgd2l0
aCBvbiB0aGUgbWFya2V0LCBhbmQgc3VwcG9ydCBPcFJlZ2lvbiAyLjErCndoZXJlIHRoZSBleHRl
bmRlZCBWQlQgaXNuJ3QgY29udGlndW91cyBhZnRlciBPcFJlZ2lvbi4KClYyOgpWYWxpZGF0ZSBS
VkRBIGZvciAyLjErIGJlZm9yZSBpbmNyZWFzaW5nIHRvdGFsIHNpemUuIChBbGV4KQoKVjM6IChB
bGV4KQpTcGxpdCByZWFkIGFuZCB3cml0ZSBvcHMuCk9uLXRoZS1mbHkgbW9kaWZ5IE9wUmVnaW9u
IHZlcnNpb24gYW5kIFJWREEuCkZpeCBzcGFyc2UgZXJyb3Igb24gYXNzaWduIHZhbHVlIHRvIGNh
c3RlZCBwb2ludGVyLgoKVjQ6IChBbGV4KQpObyBuZWVkIHN1cHBvcnQgd3JpdGUgb3AuCkRpcmVj
dCBjb3B5IHRvIHVzZXIgYnVmZmVyIHdpdGggc2V2ZXJhbCBzaGlmdCBpbnN0ZWFkIG9mIHNoYWRv
dy4KQ29weSBoZWxwZXIgdG8gY29weSB0byB1c2VyIGJ1ZmZlciBhbmQgc2hpZnQgb2Zmc2V0LgoK
VjU6IChBbGV4KQpTaW1wbGlmeSBjb3B5IGhlbHAgdG8gb25seSBjb3ZlciBjb21tb24gc2hpZnQg
Y2FzZS4KRG9uJ3QgY2FjaGUgcGF0Y2hlZCB2ZXJzaW9uIGFuZCBydmRhLiBQYXRjaCBvbiBjb3B5
IGlmIG5lY2Vzc2FyeS4KCkNjOiBaaGVueXUgV2FuZyA8emhlbnl1d0BsaW51eC5pbnRlbC5jb20+
CkNjOiBIYW5nIFl1YW4gPGhhbmcueXVhbkBsaW51eC5pbnRlbC5jb20+CkNjOiBTd2VlIFllZSBG
b25uIDxzd2VlLnllZS5mb25uQGludGVsLmNvbT4KQ2M6IEZyZWQgR2FvIDxmcmVkLmdhb0BpbnRl
bC5jb20+ClNpZ25lZC1vZmYtYnk6IENvbGluIFh1IDxjb2xpbi54dUBpbnRlbC5jb20+Ci0tLQog
ZHJpdmVycy92ZmlvL3BjaS92ZmlvX3BjaV9pZ2QuYyB8IDIzMCArKysrKysrKysrKysrKysrKysr
KysrKystLS0tLS0tLQogMSBmaWxlIGNoYW5nZWQsIDE3MiBpbnNlcnRpb25zKCspLCA1OCBkZWxl
dGlvbnMoLSkKCmRpZmYgLS1naXQgYS9kcml2ZXJzL3ZmaW8vcGNpL3ZmaW9fcGNpX2lnZC5jIGIv
ZHJpdmVycy92ZmlvL3BjaS92ZmlvX3BjaV9pZ2QuYwppbmRleCAyMjhkZjU2NWU5YmMuLjNiNzRk
MDRjNzA2ZSAxMDA2NDQKLS0tIGEvZHJpdmVycy92ZmlvL3BjaS92ZmlvX3BjaV9pZ2QuYworKysg
Yi9kcml2ZXJzL3ZmaW8vcGNpL3ZmaW9fcGNpX2lnZC5jCkBAIC0yNSwxOSArMjUsMTE4IEBACiAj
ZGVmaW5lIE9QUkVHSU9OX1JWRFMJCTB4M2MyCiAjZGVmaW5lIE9QUkVHSU9OX1ZFUlNJT04JMHgx
NgogCitzdHJ1Y3QgaWdkX29wcmVnaW9uX3ZidCB7CisJdm9pZCAqb3ByZWdpb247CisJdm9pZCAq
dmJ0X2V4OworfTsKKworLyoqCisgKiBpZ2Rfb3ByZWdpb25fc2hpZnRfY29weSgpIC0gQ29weSBP
cFJlZ2lvbiB0byB1c2VyIGJ1ZmZlciBhbmQgc2hpZnQgcG9zaXRpb24uCisgKiBAZHN0OiBVc2Vy
IGJ1ZmZlciBwdHIgdG8gY29weSB0by4KKyAqIEBvZmY6IE9mZnNldCB0byB1c2VyIGJ1ZmZlciBw
dHIuIEluY3JlYXNlZCBieSBieXRlc19hZHYgb24gcmV0dXJuLgorICogQHNyYzogU291cmNlIGJ1
ZmZlciB0byBjb3B5IGZyb20uCisgKiBAcG9zOiBJbmNyZWFzZWQgYnkgYnl0ZXNfYWR2IG9uIHJl
dHVybi4KKyAqIEByZW1haW5pbmc6IERlY3JlYXNlZCBieSBieXRlc19hZHYgb24gcmV0dXJuLgor
ICogQGJ5dGVzOiBCeXRlcyB0byBjb3B5IGFuZCBhZGp1c3Qgb2ZmLCBwb3MgYW5kIHJlbWFpbmlu
Zy4KKyAqCisgKiBDb3B5IE9wUmVnaW9uIHRvIG9mZnNldCBmcm9tIHNwZWNpZmljIHNvdXJjZSBw
dHIgYW5kIHNoaWZ0IHRoZSBvZmZzZXQuCisgKgorICogUmV0dXJuOiAwIG9uIHN1Y2Nlc3MsIC1F
RkFVTFQgb3RoZXJ3aXNlLgorICoKKyAqLworc3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIGln
ZF9vcHJlZ2lvbl9zaGlmdF9jb3B5KGNoYXIgX191c2VyICpkc3QsCisJCQkJCQkgICAgbG9mZl90
ICpvZmYsCisJCQkJCQkgICAgdm9pZCAqc3JjLAorCQkJCQkJICAgIGxvZmZfdCAqcG9zLAorCQkJ
CQkJICAgIGxvZmZfdCAqcmVtYWluaW5nLAorCQkJCQkJICAgIGxvZmZfdCBieXRlcykKK3sKKwlp
ZiAoY29weV90b191c2VyKGRzdCArICgqb2ZmKSwgc3JjLCBieXRlcykpCisJCXJldHVybiAtRUZB
VUxUOworCisJKm9mZiArPSBieXRlczsKKwkqcG9zICs9IGJ5dGVzOworCSpyZW1haW5pbmcgLT0g
Ynl0ZXM7CisKKwlyZXR1cm4gMDsKK30KKwogc3RhdGljIHNpemVfdCB2ZmlvX3BjaV9pZ2Rfcnco
c3RydWN0IHZmaW9fcGNpX2RldmljZSAqdmRldiwgY2hhciBfX3VzZXIgKmJ1ZiwKIAkJCSAgICAg
IHNpemVfdCBjb3VudCwgbG9mZl90ICpwcG9zLCBib29sIGlzd3JpdGUpCiB7CiAJdW5zaWduZWQg
aW50IGkgPSBWRklPX1BDSV9PRkZTRVRfVE9fSU5ERVgoKnBwb3MpIC0gVkZJT19QQ0lfTlVNX1JF
R0lPTlM7Ci0Jdm9pZCAqYmFzZSA9IHZkZXYtPnJlZ2lvbltpXS5kYXRhOwotCWxvZmZfdCBwb3Mg
PSAqcHBvcyAmIFZGSU9fUENJX09GRlNFVF9NQVNLOworCXN0cnVjdCBpZ2Rfb3ByZWdpb25fdmJ0
ICpvcHJlZ2lvbnZidCA9IHZkZXYtPnJlZ2lvbltpXS5kYXRhOworCWxvZmZfdCBwb3MgPSAqcHBv
cyAmIFZGSU9fUENJX09GRlNFVF9NQVNLLCBvZmYgPSAwLCByZW1haW5pbmc7CiAKIAlpZiAocG9z
ID49IHZkZXYtPnJlZ2lvbltpXS5zaXplIHx8IGlzd3JpdGUpCiAJCXJldHVybiAtRUlOVkFMOwog
CiAJY291bnQgPSBtaW4oY291bnQsIChzaXplX3QpKHZkZXYtPnJlZ2lvbltpXS5zaXplIC0gcG9z
KSk7CisJcmVtYWluaW5nID0gY291bnQ7CisKKwkvKiBDb3B5IHVudGlsIE9wUmVnaW9uIHZlcnNp
b24gKi8KKwlpZiAocmVtYWluaW5nICYmIHBvcyA8IE9QUkVHSU9OX1ZFUlNJT04pIHsKKwkJbG9m
Zl90IGJ5dGVzID0gbWluKHJlbWFpbmluZywgT1BSRUdJT05fVkVSU0lPTiAtIHBvcyk7CisKKwkJ
aWYgKGlnZF9vcHJlZ2lvbl9zaGlmdF9jb3B5KGJ1ZiwgJm9mZiwKKwkJCQkJICAgIG9wcmVnaW9u
dmJ0LT5vcHJlZ2lvbiArIHBvcywgJnBvcywKKwkJCQkJICAgICZyZW1haW5pbmcsIGJ5dGVzKSkK
KwkJCXJldHVybiAtRUZBVUxUOworCX0KKworCS8qIENvcHkgcGF0Y2hlZCAoaWYgbmVjZXNzYXJ5
KSBPcFJlZ2lvbiB2ZXJzaW9uICovCisJaWYgKHJlbWFpbmluZyAmJiBwb3MgPCBPUFJFR0lPTl9W
RVJTSU9OICsgc2l6ZW9mKF9fbGUxNikpIHsKKwkJbG9mZl90IGJ5dGVzID0gbWluKHJlbWFpbmlu
ZywKKwkJCQkgICBPUFJFR0lPTl9WRVJTSU9OICsgKGxvZmZfdClzaXplb2YoX19sZTE2KSAtIHBv
cyk7CisJCV9fbGUxNiB2ZXJzaW9uID0gKihfX2xlMTYgKikob3ByZWdpb252YnQtPm9wcmVnaW9u
ICsKKwkJCQkJICAgICBPUFJFR0lPTl9WRVJTSU9OKTsKKworCQkvKiBQYXRjaCB0byAyLjEgaWYg
T3BSZWdpb24gMi4wIGhhcyBleHRlbmRlZCBWQlQgKi8KKwkJaWYgKGxlMTZfdG9fY3B1KHZlcnNp
b24pID09IDB4MDIwMCAmJiBvcHJlZ2lvbnZidC0+dmJ0X2V4KQorCQkJdmVyc2lvbiA9IGNwdV90
b19sZTE2KDB4MDIwMSk7CisKKwkJaWYgKGlnZF9vcHJlZ2lvbl9zaGlmdF9jb3B5KGJ1ZiwgJm9m
ZiwKKwkJCQkJICAgICZ2ZXJzaW9uLCAmcG9zLAorCQkJCQkgICAgJnJlbWFpbmluZywgYnl0ZXMp
KQorCQkJcmV0dXJuIC1FRkFVTFQ7CisJfQorCisJLyogQ29weSB1bnRpbCBSVkRBICovCisJaWYg
KHJlbWFpbmluZyAmJiBwb3MgPCBPUFJFR0lPTl9SVkRBKSB7CisJCWxvZmZfdCBieXRlcyA9IG1p
bigobG9mZl90KXJlbWFpbmluZywgT1BSRUdJT05fUlZEQSAtIHBvcyk7CiAKLQlpZiAoY29weV90
b191c2VyKGJ1ZiwgYmFzZSArIHBvcywgY291bnQpKQorCQlpZiAoaWdkX29wcmVnaW9uX3NoaWZ0
X2NvcHkoYnVmLCAmb2ZmLAorCQkJCQkgICAgb3ByZWdpb252YnQtPm9wcmVnaW9uICsgcG9zLCAm
cG9zLAorCQkJCQkgICAgJnJlbWFpbmluZywgYnl0ZXMpKQorCQkJcmV0dXJuIC1FRkFVTFQ7CisJ
fQorCisJLyogQ29weSBtb2RpZmllZCAoaWYgbmVjZXNzYXJ5KSBSVkRBICovCisJaWYgKHJlbWFp
bmluZyAmJiBwb3MgPCBPUFJFR0lPTl9SVkRBICsgc2l6ZW9mKF9fbGU2NCkpIHsKKwkJbG9mZl90
IGJ5dGVzID0gbWluKHJlbWFpbmluZywgT1BSRUdJT05fUlZEQSArCisJCQkJCSAgICAgIChsb2Zm
X3Qpc2l6ZW9mKF9fbGU2NCkgLSBwb3MpOworCQlfX2xlNjQgcnZkYSA9IGNwdV90b19sZTY0KG9w
cmVnaW9udmJ0LT52YnRfZXggPworCQkJCQkgIE9QUkVHSU9OX1NJWkUgOiAwKTsKKworCQlpZiAo
aWdkX29wcmVnaW9uX3NoaWZ0X2NvcHkoYnVmLCAmb2ZmLAorCQkJCQkgICAgJnJ2ZGEsICZwb3Ms
CisJCQkJCSAgICAmcmVtYWluaW5nLCBieXRlcykpCisJCQlyZXR1cm4gLUVGQVVMVDsKKwl9CisK
KwkvKiBDb3B5IHRoZSByZXN0IG9mIE9wUmVnaW9uICovCisJaWYgKHJlbWFpbmluZyAmJiBwb3Mg
PCBPUFJFR0lPTl9TSVpFKSB7CisJCWxvZmZfdCBieXRlcyA9IG1pbihyZW1haW5pbmcsIE9QUkVH
SU9OX1NJWkUgLSBwb3MpOworCisJCWlmIChpZ2Rfb3ByZWdpb25fc2hpZnRfY29weShidWYsICZv
ZmYsCisJCQkJCSAgICBvcHJlZ2lvbnZidC0+b3ByZWdpb24gKyBwb3MsICZwb3MsCisJCQkJCSAg
ICAmcmVtYWluaW5nLCBieXRlcykpCisJCQlyZXR1cm4gLUVGQVVMVDsKKwl9CisKKwkvKiBDb3B5
IGV4dGVuZGVkIFZCVCBpZiBleGlzdHMgKi8KKwlpZiAocmVtYWluaW5nICYmCisJICAgIGNvcHlf
dG9fdXNlcihidWYgKyBvZmYsIG9wcmVnaW9udmJ0LT52YnRfZXgsIHJlbWFpbmluZykpCiAJCXJl
dHVybiAtRUZBVUxUOwogCiAJKnBwb3MgKz0gY291bnQ7CkBAIC00OCw3ICsxNDcsMTMgQEAgc3Rh
dGljIHNpemVfdCB2ZmlvX3BjaV9pZ2Rfcncoc3RydWN0IHZmaW9fcGNpX2RldmljZSAqdmRldiwg
Y2hhciBfX3VzZXIgKmJ1ZiwKIHN0YXRpYyB2b2lkIHZmaW9fcGNpX2lnZF9yZWxlYXNlKHN0cnVj
dCB2ZmlvX3BjaV9kZXZpY2UgKnZkZXYsCiAJCQkJIHN0cnVjdCB2ZmlvX3BjaV9yZWdpb24gKnJl
Z2lvbikKIHsKLQltZW11bm1hcChyZWdpb24tPmRhdGEpOworCXN0cnVjdCBpZ2Rfb3ByZWdpb25f
dmJ0ICpvcHJlZ2lvbnZidCA9IHJlZ2lvbi0+ZGF0YTsKKworCWlmIChvcHJlZ2lvbnZidC0+dmJ0
X2V4KQorCQltZW11bm1hcChvcHJlZ2lvbnZidC0+dmJ0X2V4KTsKKworCW1lbXVubWFwKG9wcmVn
aW9udmJ0LT5vcHJlZ2lvbik7CisJa2ZyZWUob3ByZWdpb252YnQpOwogfQogCiBzdGF0aWMgY29u
c3Qgc3RydWN0IHZmaW9fcGNpX3JlZ29wcyB2ZmlvX3BjaV9pZ2RfcmVnb3BzID0gewpAQCAtNjAs
NyArMTY1LDcgQEAgc3RhdGljIGludCB2ZmlvX3BjaV9pZ2Rfb3ByZWdpb25faW5pdChzdHJ1Y3Qg
dmZpb19wY2lfZGV2aWNlICp2ZGV2KQogewogCV9fbGUzMiAqZHdvcmRwID0gKF9fbGUzMiAqKSh2
ZGV2LT52Y29uZmlnICsgT1BSRUdJT05fUENJX0FERFIpOwogCXUzMiBhZGRyLCBzaXplOwotCXZv
aWQgKmJhc2U7CisJc3RydWN0IGlnZF9vcHJlZ2lvbl92YnQgKm9wcmVnaW9udmJ0OwogCWludCBy
ZXQ7CiAJdTE2IHZlcnNpb247CiAKQEAgLTcxLDg0ICsxNzYsOTMgQEAgc3RhdGljIGludCB2Zmlv
X3BjaV9pZ2Rfb3ByZWdpb25faW5pdChzdHJ1Y3QgdmZpb19wY2lfZGV2aWNlICp2ZGV2KQogCWlm
ICghYWRkciB8fCAhKH5hZGRyKSkKIAkJcmV0dXJuIC1FTk9ERVY7CiAKLQliYXNlID0gbWVtcmVt
YXAoYWRkciwgT1BSRUdJT05fU0laRSwgTUVNUkVNQVBfV0IpOwotCWlmICghYmFzZSkKKwlvcHJl
Z2lvbnZidCA9IGt6YWxsb2Moc2l6ZW9mKCpvcHJlZ2lvbnZidCksIEdGUF9LRVJORUwpOworCWlm
ICghb3ByZWdpb252YnQpCisJCXJldHVybiAtRU5PTUVNOworCisJb3ByZWdpb252YnQtPm9wcmVn
aW9uID0gbWVtcmVtYXAoYWRkciwgT1BSRUdJT05fU0laRSwgTUVNUkVNQVBfV0IpOworCWlmICgh
b3ByZWdpb252YnQtPm9wcmVnaW9uKSB7CisJCWtmcmVlKG9wcmVnaW9udmJ0KTsKIAkJcmV0dXJu
IC1FTk9NRU07CisJfQogCi0JaWYgKG1lbWNtcChiYXNlLCBPUFJFR0lPTl9TSUdOQVRVUkUsIDE2
KSkgewotCQltZW11bm1hcChiYXNlKTsKKwlpZiAobWVtY21wKG9wcmVnaW9udmJ0LT5vcHJlZ2lv
biwgT1BSRUdJT05fU0lHTkFUVVJFLCAxNikpIHsKKwkJbWVtdW5tYXAob3ByZWdpb252YnQtPm9w
cmVnaW9uKTsKKwkJa2ZyZWUob3ByZWdpb252YnQpOwogCQlyZXR1cm4gLUVJTlZBTDsKIAl9CiAK
LQlzaXplID0gbGUzMl90b19jcHUoKihfX2xlMzIgKikoYmFzZSArIDE2KSk7CisJc2l6ZSA9IGxl
MzJfdG9fY3B1KCooX19sZTMyICopKG9wcmVnaW9udmJ0LT5vcHJlZ2lvbiArIDE2KSk7CiAJaWYg
KCFzaXplKSB7Ci0JCW1lbXVubWFwKGJhc2UpOworCQltZW11bm1hcChvcHJlZ2lvbnZidC0+b3By
ZWdpb24pOworCQlrZnJlZShvcHJlZ2lvbnZidCk7CiAJCXJldHVybiAtRUlOVkFMOwogCX0KIAog
CXNpemUgKj0gMTAyNDsgLyogSW4gS0IgKi8KIAogCS8qCi0JICogU3VwcG9ydCBvcHJlZ2lvbiB2
Mi4xKwotCSAqIFdoZW4gVkJUIGRhdGEgZXhjZWVkcyA2S0Igc2l6ZSBhbmQgY2Fubm90IGJlIHdp
dGhpbiBtYWlsYm94ICM0LCB0aGVuCi0JICogdGhlIEV4dGVuZGVkIFZCVCByZWdpb24gbmV4dCB0
byBvcHJlZ2lvbiBpcyB1c2VkIHRvIGhvbGQgdGhlIFZCVCBkYXRhLgotCSAqIFJWREEgKFJlbGF0
aXZlIEFkZHJlc3Mgb2YgVkJUIERhdGEgZnJvbSBPcHJlZ2lvbiBCYXNlKSBhbmQgUlZEUwotCSAq
IChSYXcgVkJUIERhdGEgU2l6ZSkgZnJvbSBvcHJlZ2lvbiBzdHJ1Y3R1cmUgbWVtYmVyIGFyZSB1
c2VkIHRvIGhvbGQgdGhlCi0JICogYWRkcmVzcyBmcm9tIHJlZ2lvbiBiYXNlIGFuZCBzaXplIG9m
IFZCVCBkYXRhLiBSVkRBL1JWRFMgYXJlIG5vdAotCSAqIGRlZmluZWQgYmVmb3JlIG9wcmVnaW9u
IDIuMC4KLQkgKgotCSAqIG9wcmVnaW9uIDIuMSs6IFJWREEgaXMgdW5zaWduZWQsIHJlbGF0aXZl
IG9mZnNldCBmcm9tCi0JICogb3ByZWdpb24gYmFzZSwgYW5kIHNob3VsZCBwb2ludCB0byB0aGUg
ZW5kIG9mIG9wcmVnaW9uLgotCSAqIG90aGVyd2lzZSwgZXhwb3NpbmcgdG8gdXNlcnNwYWNlIHRv
IGFsbG93IHJlYWQgYWNjZXNzIHRvIGV2ZXJ5dGhpbmcgYmV0d2VlbgotCSAqIHRoZSBPcFJlZ2lv
biBhbmQgVkJUIGlzIG5vdCBzYWZlLgotCSAqIFJWRFMgaXMgZGVmaW5lZCBhcyBzaXplIGluIGJ5
dGVzLgorCSAqIE9wUmVnaW9uIGFuZCBWQlQ6CisJICogV2hlbiBWQlQgZGF0YSBkb2Vzbid0IGV4
Y2VlZCA2S0IsIGl0J3Mgc3RvcmVkIGluIE1haWxib3ggIzQuCisJICogV2hlbiBWQlQgZGF0YSBl
eGNlZWRzIDZLQiBzaXplLCBNYWlsYm94ICM0IGlzIG5vIGxvbmdlciBsYXJnZSBlbm91Z2gKKwkg
KiB0byBob2xkIHRoZSBWQlQgZGF0YSwgdGhlIEV4dGVuZGVkIFZCVCByZWdpb24gaXMgaW50cm9k
dWNlZCBzaW5jZQorCSAqIE9wUmVnaW9uIDIuMCB0byBob2xkIHRoZSBWQlQgZGF0YS4gU2luY2Ug
T3BSZWdpb24gMi4wLCBSVkRBL1JWRFMgYXJlCisJICogaW50cm9kdWNlZCB0byBkZWZpbmUgdGhl
IGV4dGVuZGVkIFZCVCBkYXRhIGxvY2F0aW9uIGFuZCBzaXplLgorCSAqIE9wUmVnaW9uIDIuMDog
UlZEQSBkZWZpbmVzIHRoZSBhYnNvbHV0ZSBwaHlzaWNhbCBhZGRyZXNzIG9mIHRoZQorCSAqICAg
ZXh0ZW5kZWQgVkJUIGRhdGEsIFJWRFMgZGVmaW5lcyB0aGUgVkJUIGRhdGEgc2l6ZS4KKwkgKiBP
cFJlZ2lvbiAyLjEgYW5kIGFib3ZlOiBSVkRBIGRlZmluZXMgdGhlIHJlbGF0aXZlIGFkZHJlc3Mg
b2YgdGhlCisJICogICBleHRlbmRlZCBWQlQgZGF0YSB0byBPcFJlZ2lvbiBiYXNlLCBSVkRTIGRl
ZmluZXMgdGhlIFZCVCBkYXRhIHNpemUuCiAJICoKLQkgKiBvcHJlZ2lvbiAyLjA6IHJ2ZGEgaXMg
dGhlIHBoeXNpY2FsIFZCVCBhZGRyZXNzLgotCSAqIFNpbmNlIHJ2ZGEgaXMgSFBBIGl0IGNhbm5v
dCBiZSBkaXJlY3RseSB1c2VkIGluIGd1ZXN0LgotCSAqIEFuZCBpdCBzaG91bGQgbm90IGJlIHBy
YWN0aWNhbGx5IGF2YWlsYWJsZSBmb3IgZW5kIHVzZXIsc28gaXQgaXMgbm90IHN1cHBvcnRlZC4K
KwkgKiBEdWUgdG8gdGhlIFJWREEgZGlmZmVyZW5jZSBpbiBPcFJlZ2lvbiBWQlQgKGFsc28gdGhl
IG9ubHkgZGlmZiBiZXR3ZWVuCisJICogMi4wIGFuZCAyLjEpLCBleHBvc2UgT3BSZWdpb24gYW5k
IFZCVCBhcyBhIGNvbnRpZ3VvdXMgcmFuZ2UgZm9yCisJICogT3BSZWdpb24gMi4wIGFuZCBhYm92
ZSBtYWtlcyBpdCBwb3NzaWJsZSB0byBzdXBwb3J0IHRoZSBub24tY29udGlndW91cworCSAqIFZC
VCB2aWEgYSBzaW5nbGUgdmZpbyByZWdpb24uIEZyb20gci93IG9wcyB2aWV3LCBvbmx5IGNvbnRp
Z3VvdXMgVkJUCisJICogYWZ0ZXIgT3BSZWdpb24gd2l0aCB2ZXJzaW9uIDIuMSsgaXMgZXhwb3Nl
ZCByZWdhcmRsZXNzIHRoZSB1bmRlcm5lYXRoCisJICogaG9zdCBpcyAyLjAgb3Igbm9uLWNvbnRp
Z3VvdXMgMi4xKy4gVGhlIHIvdyBvcHMgd2lsbCBvbi10aGUtZmx5IHNoaWZ0CisJICogdGhlIGFj
dHVyYWwgb2Zmc2V0IGludG8gVkJUIHNvIHRoYXQgZGF0YSBhdCBjb3JyZWN0IHBvc2l0aW9uIGNh
biBiZQorCSAqIHJldHVybmVkIHRvIHRoZSByZXF1ZXN0ZXIuCiAJICovCi0JdmVyc2lvbiA9IGxl
MTZfdG9fY3B1KCooX19sZTE2ICopKGJhc2UgKyBPUFJFR0lPTl9WRVJTSU9OKSk7CisJdmVyc2lv
biA9IGxlMTZfdG9fY3B1KCooX19sZTE2ICopKG9wcmVnaW9udmJ0LT5vcHJlZ2lvbiArCisJCQkJ
CSAgT1BSRUdJT05fVkVSU0lPTikpOwogCWlmICh2ZXJzaW9uID49IDB4MDIwMCkgewotCQl1NjQg
cnZkYTsKLQkJdTMyIHJ2ZHM7CisJCXU2NCBydmRhID0gbGU2NF90b19jcHUoKihfX2xlNjQgKiko
b3ByZWdpb252YnQtPm9wcmVnaW9uICsKKwkJCQkJCSAgIE9QUkVHSU9OX1JWREEpKTsKKwkJdTMy
IHJ2ZHMgPSBsZTMyX3RvX2NwdSgqKF9fbGUzMiAqKShvcHJlZ2lvbnZidC0+b3ByZWdpb24gKwor
CQkJCQkJICAgT1BSRUdJT05fUlZEUykpOwogCi0JCXJ2ZGEgPSBsZTY0X3RvX2NwdSgqKF9fbGU2
NCAqKShiYXNlICsgT1BSRUdJT05fUlZEQSkpOwotCQlydmRzID0gbGUzMl90b19jcHUoKihfX2xl
MzIgKikoYmFzZSArIE9QUkVHSU9OX1JWRFMpKTsKKwkJLyogVGhlIGV4dGVuZGVkIFZCVCBpcyB2
YWxpZCBvbmx5IHdoZW4gUlZEQS9SVkRTIGFyZSBub24temVybyAqLwogCQlpZiAocnZkYSAmJiBy
dmRzKSB7Ci0JCQkvKiBubyBzdXBwb3J0IGZvciBvcHJlZ2lvbiB2Mi4wIHdpdGggcGh5c2ljYWwg
VkJUIGFkZHJlc3MgKi8KLQkJCWlmICh2ZXJzaW9uID09IDB4MDIwMCkgewotCQkJCW1lbXVubWFw
KGJhc2UpOwotCQkJCXBjaV9lcnIodmRldi0+cGRldiwKLQkJCQkJIklHRCBhc3NpZ25tZW50IGRv
ZXMgbm90IHN1cHBvcnQgb3ByZWdpb24gdjIuMCB3aXRoIGFuIGV4dGVuZGVkIFZCVCByZWdpb25c
biIpOwotCQkJCXJldHVybiAtRUlOVkFMOwotCQkJfQorCQkJc2l6ZSArPSBydmRzOwogCi0JCQlp
ZiAocnZkYSAhPSBzaXplKSB7Ci0JCQkJbWVtdW5tYXAoYmFzZSk7Ci0JCQkJcGNpX2Vycih2ZGV2
LT5wZGV2LAotCQkJCQkiRXh0ZW5kZWQgVkJUIGRvZXMgbm90IGZvbGxvdyBvcHJlZ2lvbiBvbiB2
ZXJzaW9uIDB4JTA0eFxuIiwKLQkJCQkJdmVyc2lvbik7Ci0JCQkJcmV0dXJuIC1FSU5WQUw7CisJ
CQkvKgorCQkJICogRXh0ZW5kZWQgVkJUIGxvY2F0aW9uIGJ5IFJWREE6CisJCQkgKiBBYnNvbHV0
ZSBwaHlzaWNhbCBhZGRyIGZvciAyLjAuCisJCQkgKiBSZWxhdGl2ZSBhZGRyIHRvIE9wUmVnaW9u
IGhlYWRlciBmb3IgMi4xKy4KKwkJCSAqLworCQkJaWYgKHZlcnNpb24gPT0gMHgwMjAwKQorCQkJ
CWFkZHIgPSBydmRhOworCQkJZWxzZQorCQkJCWFkZHIgKz0gcnZkYTsKKworCQkJb3ByZWdpb252
YnQtPnZidF9leCA9IG1lbXJlbWFwKGFkZHIsIHJ2ZHMsIE1FTVJFTUFQX1dCKTsKKwkJCWlmICgh
b3ByZWdpb252YnQtPnZidF9leCkgeworCQkJCW1lbXVubWFwKG9wcmVnaW9udmJ0LT5vcHJlZ2lv
bik7CisJCQkJa2ZyZWUob3ByZWdpb252YnQpOworCQkJCXJldHVybiAtRU5PTUVNOwogCQkJfQot
Ci0JCQkvKiByZWdpb24gc2l6ZSBmb3Igb3ByZWdpb24gdjIuMCs6IG9wcmVnaW9uIGFuZCBWQlQg
c2l6ZS4gKi8KLQkJCXNpemUgKz0gcnZkczsKIAkJfQogCX0KIAotCWlmIChzaXplICE9IE9QUkVH
SU9OX1NJWkUpIHsKLQkJbWVtdW5tYXAoYmFzZSk7Ci0JCWJhc2UgPSBtZW1yZW1hcChhZGRyLCBz
aXplLCBNRU1SRU1BUF9XQik7Ci0JCWlmICghYmFzZSkKLQkJCXJldHVybiAtRU5PTUVNOwotCX0K
LQogCXJldCA9IHZmaW9fcGNpX3JlZ2lzdGVyX2Rldl9yZWdpb24odmRldiwKIAkJUENJX1ZFTkRP
Ul9JRF9JTlRFTCB8IFZGSU9fUkVHSU9OX1RZUEVfUENJX1ZFTkRPUl9UWVBFLAotCQlWRklPX1JF
R0lPTl9TVUJUWVBFX0lOVEVMX0lHRF9PUFJFR0lPTiwKLQkJJnZmaW9fcGNpX2lnZF9yZWdvcHMs
IHNpemUsIFZGSU9fUkVHSU9OX0lORk9fRkxBR19SRUFELCBiYXNlKTsKKwkJVkZJT19SRUdJT05f
U1VCVFlQRV9JTlRFTF9JR0RfT1BSRUdJT04sICZ2ZmlvX3BjaV9pZ2RfcmVnb3BzLAorCQlzaXpl
LCBWRklPX1JFR0lPTl9JTkZPX0ZMQUdfUkVBRCwgb3ByZWdpb252YnQpOwogCWlmIChyZXQpIHsK
LQkJbWVtdW5tYXAoYmFzZSk7CisJCWlmIChvcHJlZ2lvbnZidC0+dmJ0X2V4KQorCQkJbWVtdW5t
YXAob3ByZWdpb252YnQtPnZidF9leCk7CisKKwkJbWVtdW5tYXAob3ByZWdpb252YnQtPm9wcmVn
aW9uKTsKKwkJa2ZyZWUob3ByZWdpb252YnQpOwogCQlyZXR1cm4gcmV0OwogCX0KIAotLSAKMi4z
My4wCgo=
