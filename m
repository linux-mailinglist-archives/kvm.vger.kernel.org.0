Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from vger.kernel.org (vger.kernel.org [23.128.96.18])
	by mail.lfdr.de (Postfix) with ESMTP id 7B8E5399253
	for <lists+kvm@lfdr.de>; Wed,  2 Jun 2021 20:17:37 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S229583AbhFBSTT (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Wed, 2 Jun 2021 14:19:19 -0400
Received: from us-smtp-delivery-124.mimecast.com ([170.10.133.124]:26494 "EHLO
        us-smtp-delivery-124.mimecast.com" rhost-flags-OK-OK-OK-OK)
        by vger.kernel.org with ESMTP id S229467AbhFBSTQ (ORCPT
        <rfc822;kvm@vger.kernel.org>); Wed, 2 Jun 2021 14:19:16 -0400
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
        s=mimecast20190719; t=1622657853;
        h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
         to:to:cc:cc:mime-version:mime-version:content-type:content-type:
         content-transfer-encoding:content-transfer-encoding:
         in-reply-to:in-reply-to:references:references;
        bh=ahzsiWMZxojr9G4HDfeT3zH2J1bsBxHW/tNRfW/BP5w=;
        b=d7KxiTKHjIs/D/L1k5XvcM37IcETHNzMB+bvw/BVVlj7topR9zgcRgEypakCuBHqV/oywi
        k93RMQjB9sW64SEkandyZB5u6znylDiMUAVuNe7G4CLh+kWmmizQJantz5n+U4oXyTPl/g
        Efvl8geibW7C+K7W0/Obkpj1wl/y4lU=
Received: from mail-ej1-f71.google.com (mail-ej1-f71.google.com
 [209.85.218.71]) (Using TLS) by relay.mimecast.com with ESMTP id
 us-mta-582-RiK_yFzbMa2HlVCEYAtxRQ-1; Wed, 02 Jun 2021 14:17:32 -0400
X-MC-Unique: RiK_yFzbMa2HlVCEYAtxRQ-1
Received: by mail-ej1-f71.google.com with SMTP id h18-20020a1709063992b02903d59b32b039so1011832eje.12
        for <kvm@vger.kernel.org>; Wed, 02 Jun 2021 11:17:32 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:subject:to:cc:references:from:message-id:date
         :user-agent:mime-version:in-reply-to:content-language
         :content-transfer-encoding;
        bh=ahzsiWMZxojr9G4HDfeT3zH2J1bsBxHW/tNRfW/BP5w=;
        b=I3EX8aonba/hOHhMwjsisKdp3Kz8lvAOp90RPLlHa3agdxtnk91BiXCkR5z8CQvqqx
         tuKkA7Y2xOngdDW433uNFXytHT1Ce2pxJh3BpcJ/NQpjrx8MKDCwKZu99v+e/hCAfw35
         YPdtAgLwZ7vU4uiXKM8vAzlv0sAMydb8s+XATQivP+EftWPTuZ7q+DKbhX4HlKfHJO9w
         USLHc67TuQCk6JD4uvVpVaUeLj2dXdEV65p7OwgTBHNtef3Szp0NJugJi/iw+TJu5kxP
         Bt73fl9Ud9w2Rx/HJ29OaBW1+CRuYUOKilKlYhd57lezdkVFDdoJCMiZl0JuFc6G/8Av
         5l1Q==
X-Gm-Message-State: AOAM532qRzdgdo+x3ZG6M4/5pZP9WWcGLgzQ6QfCNUn82LCR6O3papv0
        1ZgGXT14S0Lnh8AfSgVcHgYb3B9H8LnwAKEG/MCrUE3hanrCbxOOx9O+jKkQtWnhZ2QB+/8gaQ/
        TrbH9AdLhOuZR
X-Received: by 2002:a05:6402:19a:: with SMTP id r26mr39471582edv.44.1622657850937;
        Wed, 02 Jun 2021 11:17:30 -0700 (PDT)
X-Google-Smtp-Source: ABdhPJy2oN509+nTdrCca9UrcwIHrB2+SWUokwV4NMe2lgeRHf0w3zhFoEIikLSFOFJUSFqEAwBiSQ==
X-Received: by 2002:a05:6402:19a:: with SMTP id r26mr39471573edv.44.1622657850747;
        Wed, 02 Jun 2021 11:17:30 -0700 (PDT)
Received: from [192.168.1.36] (235.red-83-57-168.dynamicip.rima-tde.net. [83.57.168.235])
        by smtp.gmail.com with ESMTPSA id v1sm341281ejw.117.2021.06.02.11.17.29
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Wed, 02 Jun 2021 11:17:30 -0700 (PDT)
Subject: Re: [PATCH v8] qapi: introduce 'query-kvm-cpuid' action
To:     Valeriy Vdovin <valeriy.vdovin@virtuozzo.com>,
        qemu-devel@nongnu.org
Cc:     Eduardo Habkost <ehabkost@redhat.com>,
        Marcel Apfelbaum <marcel.apfelbaum@gmail.com>,
        Eric Blake <eblake@redhat.com>,
        Markus Armbruster <armbru@redhat.com>,
        Paolo Bonzini <pbonzini@redhat.com>,
        Marcelo Tosatti <mtosatti@redhat.com>,
        Richard Henderson <richard.henderson@linaro.org>,
        Thomas Huth <thuth@redhat.com>,
        Laurent Vivier <lvivier@redhat.com>, kvm@vger.kernel.org,
        Denis Lunev <den@openvz.org>,
        Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>
References: <20210531123806.23030-1-valeriy.vdovin@virtuozzo.com>
From:   =?UTF-8?Q?Philippe_Mathieu-Daud=c3=a9?= <philmd@redhat.com>
Message-ID: <266974fa-da6c-d0fc-ce12-6a7ce1752fa6@redhat.com>
Date:   Wed, 2 Jun 2021 20:17:28 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:78.0) Gecko/20100101
 Thunderbird/78.10.1
MIME-Version: 1.0
In-Reply-To: <20210531123806.23030-1-valeriy.vdovin@virtuozzo.com>
Content-Type: text/plain; charset=utf-8
Content-Language: en-US
Content-Transfer-Encoding: 7bit
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

Hi Valeriy,

(Sorry for not looking earlier than v8)

On 5/31/21 2:38 PM, Valeriy Vdovin wrote:
> Introducing new qapi method 'query-kvm-cpuid'. This method can be used to
> get virtualized cpu model info generated by QEMU during VM initialization in
> the form of cpuid representation.
> 
> Diving into more details about virtual cpu generation: QEMU first parses '-cpu'
> command line option. From there it takes the name of the model as the basis for
> feature set of the new virtual cpu. After that it uses trailing '-cpu' options,
> that state if additional cpu features should be present on the virtual cpu or
> excluded from it (tokens '+'/'-' or '=on'/'=off').
> After that QEMU checks if the host's cpu can actually support the derived
> feature set and applies host limitations to it.
> After this initialization procedure, virtual cpu has it's model and
> vendor names, and a working feature set and is ready for identification
> instructions such as CPUID.
> 
> Currently full output for this method is only supported for x86 cpus.
> 
> To learn exactly how virtual cpu is presented to the guest machine via CPUID
> instruction, new qapi method can be used. By calling 'query-kvm-cpuid'
> method, one can get a full listing of all CPUID leafs with subleafs which are
> supported by the initialized virtual cpu.
> 
> Other than debug, the method is useful in cases when we would like to
> utilize QEMU's virtual cpu initialization routines and put the retrieved
> values into kernel CPUID overriding mechanics for more precise control
> over how various processes perceive its underlying hardware with
> container processes as a good example.
> 
> Output format:
> The output is a plain list of leaf/subleaf agrument combinations, that
> return 4 words in registers EAX, EBX, ECX, EDX.
> 
> Use example:
> qmp_request: {
>   "execute": "query-kvm-cpuid"
> }
> 
> qmp_response: [
>   {
>     "eax": 1073741825,
>     "edx": 77,
>     "in_eax": 1073741824,
>     "ecx": 1447775574,
>     "ebx": 1263359563,
>   },
>   {
>     "eax": 16777339,
>     "edx": 0,
>     "in_eax": 1073741825,
>     "ecx": 0,
>     "ebx": 0,
>   },
>   {
>     "eax": 13,
>     "edx": 1231384169,
>     "in_eax": 0,
>     "ecx": 1818588270,
>     "ebx": 1970169159,
>   },
>   {
>     "eax": 198354,
>     "edx": 126614527,
>   ....
> 
> Signed-off-by: Valeriy Vdovin <valeriy.vdovin@virtuozzo.com>

---

> 
> v2: - Removed leaf/subleaf iterators.
>     - Modified cpu_x86_cpuid to return false in cases when count is
>       greater than supported subleaves.
> v3: - Fixed structure name coding style.
>     - Added more comments
>     - Ensured buildability for non-x86 targets.
> v4: - Fixed cpu_x86_cpuid return value logic and handling of 0xA leaf.
>     - Fixed comments.
>     - Removed target check in qmp_query_cpu_model_cpuid.
> v5: - Added error handling code in qmp_query_cpu_model_cpuid
> v6: - Fixed error handling code. Added method to query_error_class
> v7: - Changed implementation in favor of cached cpuid_data for
>       KVM_SET_CPUID2
> v8: - Renamed qmp method to query-kvm-cpuid and some fields in response.
>     - Modified documentation to qmp method
>     - Removed helper struct declaration
> ---

^ Below this '---' go your comments.

>  qapi/machine-target.json   | 43 ++++++++++++++++++++++++++++++++++++++
>  target/i386/kvm/kvm.c      | 37 ++++++++++++++++++++++++++++++++
>  tests/qtest/qmp-cmd-test.c |  1 +
>  3 files changed, 81 insertions(+)
> 
> diff --git a/qapi/machine-target.json b/qapi/machine-target.json
> index e7811654b7..a83180dd24 100644
> --- a/qapi/machine-target.json
> +++ b/qapi/machine-target.json
> @@ -329,3 +329,46 @@
>  ##
>  { 'command': 'query-cpu-definitions', 'returns': ['CpuDefinitionInfo'],
>    'if': 'defined(TARGET_PPC) || defined(TARGET_ARM) || defined(TARGET_I386) || defined(TARGET_S390X) || defined(TARGET_MIPS)' }
> +
> +##
> +# @CpuidEntry:
> +#
> +# A single entry of a CPUID response.
> +#
> +# One entry holds full set of information (leaf) returned to the guest in response
> +# to it calling a CPUID instruction with eax, ecx used as the agruments to that
> +# instruction. ecx is an optional argument as not all of the leaves support it.
> +#
> +# @in_eax: CPUID argument in eax
> +# @in_ecx: CPUID argument in ecx
> +# @eax: eax
> +# @ebx: ebx
> +# @ecx: ecx
> +# @edx: edx
> +#
> +# Since: 6.1
> +##
> +{ 'struct': 'CpuidEntry',
> +  'data': { 'in_eax' : 'uint32',
> +            '*in_ecx' : 'uint32',
> +            'eax' : 'uint32',
> +            'ebx' : 'uint32',
> +            'ecx' : 'uint32',
> +            'edx' : 'uint32'
> +          },
> +  'if': 'defined(TARGET_I386) && defined(CONFIG_KVM)' }

What about other accelerators?

> +
> +##
> +# @query-kvm-cpuid:
> +#
> +# Returns raw data from the KVM CPUID table for the first VCPU.
> +# The KVM CPUID table defines the response to the CPUID
> +# instruction when executed by the guest operating system.

What is specific to KVM here?

What about 'query-accel-cpuid' or 'query-vm-cpu-id'?

> +#
> +# Returns: a list of CpuidEntry
> +#
> +# Since: 6.1
> +##
> +{ 'command': 'query-kvm-cpuid',
> +  'returns': ['CpuidEntry'],
> +  'if': 'defined(TARGET_I386) && defined(CONFIG_KVM)' }
...
> diff --git a/tests/qtest/qmp-cmd-test.c b/tests/qtest/qmp-cmd-test.c
> index c98b78d033..48add3ada1 100644
> --- a/tests/qtest/qmp-cmd-test.c
> +++ b/tests/qtest/qmp-cmd-test.c
> @@ -46,6 +46,7 @@ static int query_error_class(const char *cmd)
>          { "query-balloon", ERROR_CLASS_DEVICE_NOT_ACTIVE },
>          { "query-hotpluggable-cpus", ERROR_CLASS_GENERIC_ERROR },
>          { "query-vm-generation-id", ERROR_CLASS_GENERIC_ERROR },
> +        { "query-kvm-cpuid", ERROR_CLASS_GENERIC_ERROR },
>          { NULL, -1 }
>      };
>      int i;
> 

