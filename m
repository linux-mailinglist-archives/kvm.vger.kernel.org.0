Return-Path: <kvm-owner@vger.kernel.org>
X-Original-To: lists+kvm@lfdr.de
Delivered-To: lists+kvm@lfdr.de
Received: from out1.vger.email (out1.vger.email [IPv6:2620:137:e000::1:20])
	by mail.lfdr.de (Postfix) with ESMTP id 7181D7092CF
	for <lists+kvm@lfdr.de>; Fri, 19 May 2023 11:16:35 +0200 (CEST)
Received: (majordomo@vger.kernel.org) by vger.kernel.org via listexpand
        id S231271AbjESJQe (ORCPT <rfc822;lists+kvm@lfdr.de>);
        Fri, 19 May 2023 05:16:34 -0400
Received: from lindbergh.monkeyblade.net ([23.128.96.19]:58628 "EHLO
        lindbergh.monkeyblade.net" rhost-flags-OK-OK-OK-OK) by vger.kernel.org
        with ESMTP id S229929AbjESJQd (ORCPT <rfc822;kvm@vger.kernel.org>);
        Fri, 19 May 2023 05:16:33 -0400
Received: from dfw.source.kernel.org (dfw.source.kernel.org [IPv6:2604:1380:4641:c500::1])
        by lindbergh.monkeyblade.net (Postfix) with ESMTPS id 519FCFB
        for <kvm@vger.kernel.org>; Fri, 19 May 2023 02:16:32 -0700 (PDT)
Received: from smtp.kernel.org (relay.kernel.org [52.25.139.140])
        (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
        (No client certificate requested)
        by dfw.source.kernel.org (Postfix) with ESMTPS id 9BC68619F3
        for <kvm@vger.kernel.org>; Fri, 19 May 2023 09:16:31 +0000 (UTC)
Received: by smtp.kernel.org (Postfix) with ESMTPSA id EFA0DC433D2;
        Fri, 19 May 2023 09:16:30 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
        s=k20201202; t=1684487791;
        bh=vp8fyf2m1zfTMc2De/CZpZJng1oQxcLCGX8JG2wc9Z4=;
        h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
        b=lx9YbqAUrgEKdhnRZTGrgA5c0PnJKn7rqnRye3oWZBmCQN4Y00d1+qeMdG2x/vQzC
         7GGd/haFegIoW+DwuZkQFJsMJD7TJIdqY6Ak15rqtvTNKd98kMncSbR4DhYEPRpMq8
         kD6zsMiXvzKmL07HhoHIiJZSzGfmyQYJVJcefxUnaFigZmj1m84BGO4L5LGd0gaBoC
         D6yE6bqTbC1x0BaT7Sy3IWzovx4qbsGUyLhmJxA3p0vy//IO9atMPfHf/kFLUtXxWi
         2EUQQYedVmrHYc5RAXoGD0me6hYn4FpV7HdtTkH88Suoy5U4cfSveGeC8ZgTzmN2WQ
         3jfXqiJwsAAOg==
Received: from sofa.misterjones.org ([185.219.108.64] helo=goblin-girl.misterjones.org)
        by disco-boy.misterjones.org with esmtpsa  (TLS1.3) tls TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        (Exim 4.95)
        (envelope-from <maz@kernel.org>)
        id 1pzwDs-00GNCn-Fn;
        Fri, 19 May 2023 10:16:28 +0100
Date:   Fri, 19 May 2023 10:16:28 +0100
Message-ID: <86bkigllzn.wl-maz@kernel.org>
From:   Marc Zyngier <maz@kernel.org>
To:     "Jitindar Singh, Suraj" <surajjs@amazon.com>
Cc:     "jingzhangos@google.com" <jingzhangos@google.com>,
        "pbonzini@redhat.com" <pbonzini@redhat.com>,
        "reijiw@google.com" <reijiw@google.com>,
        "james.morse@arm.com" <james.morse@arm.com>,
        "suzuki.poulose@arm.com" <suzuki.poulose@arm.com>,
        "kvmarm@lists.linux.dev" <kvmarm@lists.linux.dev>,
        "rananta@google.com" <rananta@google.com>,
        "linux-arm-kernel@lists.infradead.org" 
        <linux-arm-kernel@lists.infradead.org>,
        "kvm@vger.kernel.org" <kvm@vger.kernel.org>,
        "tabba@google.com" <tabba@google.com>,
        "oupton@google.com" <oupton@google.com>,
        "alexandru.elisei@arm.com" <alexandru.elisei@arm.com>,
        "will@kernel.org" <will@kernel.org>
Subject: Re: [PATCH v8 6/6] KVM: arm64: Refactor writings for PMUVer/CSV2/CSV3
In-Reply-To: <7a4a7d86c851563d5ad631070611918906e92015.camel@amazon.com>
References: <20230503171618.2020461-1-jingzhangos@google.com>
        <20230503171618.2020461-7-jingzhangos@google.com>
        <b64e5639b1b9bb5e5e4ff8eaa10554ae0d9a6016.camel@amazon.com>
        <CAAdAUtibBVuMGhh9NEOxpEyMQ6bxde674ME+hHqERoT5hctETA@mail.gmail.com>
        <7a4a7d86c851563d5ad631070611918906e92015.camel@amazon.com>
User-Agent: Wanderlust/2.15.9 (Almost Unreal) SEMI-EPG/1.14.7 (Harue)
 FLIM-LB/1.14.9 (=?UTF-8?B?R29qxY0=?=) APEL-LB/10.8 EasyPG/1.0.0 Emacs/28.2
 (aarch64-unknown-linux-gnu) MULE/6.0 (HANACHIRUSATO)
MIME-Version: 1.0 (generated by SEMI-EPG 1.14.7 - "Harue")
Content-Type: text/plain; charset=US-ASCII
X-SA-Exim-Connect-IP: 185.219.108.64
X-SA-Exim-Rcpt-To: surajjs@amazon.com, jingzhangos@google.com, pbonzini@redhat.com, reijiw@google.com, james.morse@arm.com, suzuki.poulose@arm.com, kvmarm@lists.linux.dev, rananta@google.com, linux-arm-kernel@lists.infradead.org, kvm@vger.kernel.org, tabba@google.com, oupton@google.com, alexandru.elisei@arm.com, will@kernel.org
X-SA-Exim-Mail-From: maz@kernel.org
X-SA-Exim-Scanned: No (on disco-boy.misterjones.org); SAEximRunCond expanded to false
X-Spam-Status: No, score=-4.4 required=5.0 tests=BAYES_00,DKIMWL_WL_HIGH,
        DKIM_SIGNED,DKIM_VALID,DKIM_VALID_AU,DKIM_VALID_EF,RCVD_IN_DNSWL_MED,
        SPF_HELO_NONE,SPF_PASS,T_SCC_BODY_TEXT_LINE autolearn=ham
        autolearn_force=no version=3.4.6
X-Spam-Checker-Version: SpamAssassin 3.4.6 (2021-04-09) on
        lindbergh.monkeyblade.net
Precedence: bulk
List-ID: <kvm.vger.kernel.org>
X-Mailing-List: kvm@vger.kernel.org

On Thu, 18 May 2023 22:08:15 +0100,
"Jitindar Singh, Suraj" <surajjs@amazon.com> wrote:
> 
> Reading init_cpu_ftr_reg() is hurting my head :p but don't we have
> basically 2 cases here?
> 
> 1. We are unaffected by spectre|meltdown i.e.
> arm64_get_[spectre|meltdown]_v2_state() will return SPECTRE_UNAFFECTED
> and we will set the limit to 1 for the csv[1|2] bit fields in
> read_sanitised_id_aa64pfr0_el1()
>
> or
> 
> 2. We ARE affected by spectre|meltdown in which case
> arm64_get_[spectre|meltdown]_v2_state() will be
> SPECTRE_VULNERABLE|SPECTRE_MITIGATED in which case
> read_sanitised_ftr_reg() will return a value with csv[1|2] set to 0
> essentially setting the limit for either of these bit fields to 0 in
> read_sanitised_id_aa64pfr0_el1().

What is "WE"?

> 
> Are we trying to catch the case where csv[1|2] is 0 on the host but we
> are unaffected as detected by e.g. cpuid and that cpu happens to
> incorrectly not set csv[1|2] in the ID register but we still want to
> allow the guest to see those bits as set?
> 
> This isn't really related to the CR as I know this is existing code
> which has just been moved around and sorry if I'm missing something
> obvious.

This code is called from *userspace*, and tries to cope with a VM
being restored. So we have 3 (not 2 cases):

- both the source and the destination have the same level of CSVx
  support, and all is great in the world

- the source has CSVx==0, while the destination has CSVx=1. All good,
  as we won't be lying to the guest, and the extra mitigation
  executed by the guest isn't a functional problem. The guest will
  still see CSVx=0 after migration.

- the source has CSVx=1, while the destination has CSVx=0. This isn't
  an acceptable situation, and we return an error

Is that clearer?

	M.

-- 
Without deviation from the norm, progress is not possible.
